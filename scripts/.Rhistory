#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","dplyr","lme4","car","blme","tidyr","nlme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  LOAD FUNCTIONS =================================
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
#=================================  LOAD DATA  ===============================
source(paste(scriptswd, "2_meta-analysis_data preparation.R", sep="/"))
#================================== Test effect of nuisance variables on success for the full dataset ===========================
vars <- c("study.length","sample.size","analysis2","lit.type","score","biased.metric")
m.global <- glmer(success ~ study.length + sample.size + analysis2 + lit.type + score + biased.metric + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
m <- list()
for (i in 1:length(vars)) {
m[[i]] <- drop1(m.global, scope = as.formula(paste("~", vars[i], sep="")), test="Chisq")
}
m
mout.list <- lapply(m, function(x) {
modout <-data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=x[,"Pr(Chi)"][2])
return(modout)
})
mout.all <- do.call(rbind, mout.list)
mout.all <- data.frame(mout.all, vars) # append name of variable dropped to its relevant output
mout.all
?`%>%`
lapply(m, function(x) {data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=x[,"Pr(Chi)"][2]) %>% return
}) %>%
do.call(rbind, .) %>%
data.frame(vars)
save(c(m,vars), paste(workspacewd, "example variables.rda"))
save(c(m,vars), paste(workspacewd, "example variables.rda", sep="/"))
save(m,vars, file=paste(workspacewd, "example variables.rda", sep="/"))
ls()
rm(m)
rm(vars)
ls
ls()
load(file=paste(workspacewd, "example variables.rda", sep="/"))
ls
ls()
m
vars
