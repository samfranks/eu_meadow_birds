# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], "*species + lit.type + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ species + lit.type + (1|reference)")
}
# run a normal glmer model
m.ind.sp[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# if ANY checkzeros==0, then there are categories which are missing any observations whatsoever, so will have problems with complete separation and/or convergence
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer, based on the dimensions of the covariance matrix from the regular glmer model
# if (any(checkzeros==0)) {
vcov.dim <- nrow(vcov(m.ind.sp[[i]]))
m.ind.sp.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
# }
#   m <- bglmer(success ~ 1 + (1|reference), data=mdat, family=binomial, fixef.prior = normal(diag()), control=glmerControl(optimizer="bobyqa"))
#   m2 <- bglmer(success ~ species + (1|reference), data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,6)), control=glmerControl(optimizer="bobyqa"))
#
#   m2 <- bglmer(success ~ 1 + (1|reference), data=mdat, family=binomial, fixef.prior = normal, control=glmerControl(optimizer="bobyqa"))
}
vcov.dim
vcov(m.ind.sp[[i]])
names(m.ind.sp) <- mgmtvars
names(m.ind.sp.blme) <- mgmtvars
names(usedat) <- mgmtvars
warningmessages.lme4 <- lapply(m.ind.sp, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.lme4
warningmessages.blme <- lapply(m.ind.sp.blme, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.blme
i<-8
mgmtvars[i]
mdat <- sppdat[sppdat[,mgmtvars[i]]!="none",]
table(mdat[,mgmtvars[i]], mdat$species, mdat$success)
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
# dunlin and ruff will need to be removed from most categories due to lack of observations, but there may be some with sufficient, or ok if combined
if (mgmtvars[i]=="AE") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="AE.level") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="reserve.desig") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
}
if (mgmtvars[i]=="mowing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff" | mdat$species=="curlew", "dunlin/ruff/curlew", as.character(mdat$species)) # combine dunlin + ruff + curlew
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
mdat <- subset(mdat, mowing!="applied")
}
if (mgmtvars[i]=="grazing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat <- subset(mdat, grazing!="reduced")
# mdat <- subset(mdat, species!="snipe" & species!="curlew")
}
if (mgmtvars[i]=="fertpest") {
mdat <- subset(mdat, fertpest!="applied") # remove applied level as causes non-convergence even for bglmer model
mdat <- subset(mdat, species=="black-tailed godwit" | species=="lapwing") # model convergence issues when oyc and redshank are included
# mdat <- subset(mdat, species!="snipe" & species!="curlew" & species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="nest.protect") {
mdat <- subset(mdat, species!="curlew" & species!="ruff") # 1 obs each; exclude rather than combine as interpretation for curlew/ruff combined doesn't make sense (too dissimilar in ecology)
}
if (mgmtvars[i]=="predator.control") {
# mdat <- subset(mdat, predator.control!="reduced")
mdat <- subset(mdat, species!="snipe" & species!="oystercatcher")
}
if (mgmtvars[i]=="water") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
mdat <- subset(mdat, water!="reduced")
# model runs ok without 2 of curlew, oystercatcher and snipe, but model won't converge and has a very high max|grad| value when more than 1 of these species is included. Since they all have no successes for this management intervention and similar levels of failure, then combine together for the water analysis
mdat <- subset(mdat, species!="curlew" & species!="snipe")
# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], "*species + lit.type + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ species + lit.type + (1|reference)")
}
# run a normal glmer model
m.ind.sp[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# if ANY checkzeros==0, then there are categories which are missing any observations whatsoever, so will have problems with complete separation and/or convergence
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer, based on the dimensions of the covariance matrix from the regular glmer model
vcov.dim <- nrow(vcov(m.ind.sp[[i]]))
m.ind.sp.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
summary(m.ind.sp.blme[[8]])
mgmtvars[i]
mdat <- sppdat[sppdat[,mgmtvars[i]]!="none",]
table(mdat[,mgmtvars[i]], mdat$species, mdat$success)
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
# dunlin and ruff will need to be removed from most categories due to lack of observations, but there may be some with sufficient, or ok if combined
if (mgmtvars[i]=="AE") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="AE.level") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="reserve.desig") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
}
if (mgmtvars[i]=="mowing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff" | mdat$species=="curlew", "dunlin/ruff/curlew", as.character(mdat$species)) # combine dunlin + ruff + curlew
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
mdat <- subset(mdat, mowing!="applied")
}
if (mgmtvars[i]=="grazing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat <- subset(mdat, grazing!="reduced")
# mdat <- subset(mdat, species!="snipe" & species!="curlew")
}
if (mgmtvars[i]=="fertpest") {
mdat <- subset(mdat, fertpest!="applied") # remove applied level as causes non-convergence even for bglmer model
mdat <- subset(mdat, species=="black-tailed godwit" | species=="lapwing") # model convergence issues when oyc and redshank are included
# mdat <- subset(mdat, species!="snipe" & species!="curlew" & species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="nest.protect") {
mdat <- subset(mdat, species!="curlew" & species!="ruff") # 1 obs each; exclude rather than combine as interpretation for curlew/ruff combined doesn't make sense (too dissimilar in ecology)
}
if (mgmtvars[i]=="predator.control") {
# mdat <- subset(mdat, predator.control!="reduced")
mdat <- subset(mdat, species!="snipe" & species!="oystercatcher" & species!="redshank")
}
if (mgmtvars[i]=="water") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
mdat <- subset(mdat, water!="reduced")
# model runs ok without 2 of curlew, oystercatcher and snipe, but model won't converge and has a very high max|grad| value when more than 1 of these species is included. Since they all have no successes for this management intervention and similar levels of failure, then combine together for the water analysis
mdat <- subset(mdat, species!="curlew" & species!="snipe")
# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], "*species + lit.type + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ species + lit.type + (1|reference)")
}
# run a normal glmer model
m.ind.sp[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# if ANY checkzeros==0, then there are categories which are missing any observations whatsoever, so will have problems with complete separation and/or convergence
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer, based on the dimensions of the covariance matrix from the regular glmer model
vcov.dim <- nrow(vcov(m.ind.sp[[i]]))
m.ind.sp.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
summary(m.ind.sp.blme[[8]])
warningmessages.lme4
# set up list to output models and model datasets to
m.ind.sp <- list()
m.ind.sp.blme <- list()
usedat <- list() # data subset used to run a model
for (i in 1:length(mgmtvars)) {
mgmtvars[i]
mdat <- sppdat[sppdat[,mgmtvars[i]]!="none",]
table(mdat[,mgmtvars[i]], mdat$species, mdat$success)
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
# dunlin and ruff will need to be removed from most categories due to lack of observations, but there may be some with sufficient, or ok if combined
if (mgmtvars[i]=="AE") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="AE.level") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="reserve.desig") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
}
if (mgmtvars[i]=="mowing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff" | mdat$species=="curlew", "dunlin/ruff/curlew", as.character(mdat$species)) # combine dunlin + ruff + curlew
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
mdat <- subset(mdat, mowing!="applied")
}
if (mgmtvars[i]=="grazing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat <- subset(mdat, grazing!="reduced")
# mdat <- subset(mdat, species!="snipe" & species!="curlew")
}
if (mgmtvars[i]=="fertpest") {
mdat <- subset(mdat, fertpest!="applied") # remove applied level as causes non-convergence even for bglmer model
mdat <- subset(mdat, species=="black-tailed godwit" | species=="lapwing") # model convergence issues when oyc and redshank are included
# mdat <- subset(mdat, species!="snipe" & species!="curlew" & species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="nest.protect") {
mdat <- subset(mdat, species!="curlew" & species!="ruff") # 1 obs each; exclude rather than combine as interpretation for curlew/ruff combined doesn't make sense (too dissimilar in ecology)
}
if (mgmtvars[i]=="predator.control") {
# mdat <- subset(mdat, predator.control!="reduced")
mdat <- subset(mdat, species!="snipe" & species!="oystercatcher" & species!="redshank")
}
if (mgmtvars[i]=="water") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
mdat <- subset(mdat, water!="reduced")
# model runs ok without 2 of curlew, oystercatcher and snipe, but model won't converge and has a very high max|grad| value when more than 1 of these species is included. Since they all have no successes for this management intervention and similar levels of failure, then combine together for the water analysis
mdat <- subset(mdat, species!="curlew" & species!="snipe")
# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], "*species + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ species + (1|reference)")
}
# run a normal glmer model
m.ind.sp[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# if ANY checkzeros==0, then there are categories which are missing any observations whatsoever, so will have problems with complete separation and/or convergence
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer, based on the dimensions of the covariance matrix from the regular glmer model
vcov.dim <- nrow(vcov(m.ind.sp[[i]]))
m.ind.sp.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
}
# m <- bglmer(success ~ species + lit.type + (1|reference), data=usedat[[1]], family=binomial, fixef.prior = normal(sd=3), control=glmerControl(optimizer="bobyqa"))
# anova(m,update(m,~.-species))
names(m.ind.sp) <- mgmtvars
names(m.ind.sp.blme) <- mgmtvars
names(usedat) <- mgmtvars
warningmessages.lme4 <- lapply(m.ind.sp, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.lme4
warningmessages.blme <- lapply(m.ind.sp.blme, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.blme
i<-5
mgmtvars[i]
mdat <- sppdat[sppdat[,mgmtvars[i]]!="none",]
table(mdat[,mgmtvars[i]], mdat$species, mdat$success)
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
# dunlin and ruff will need to be removed from most categories due to lack of observations, but there may be some with sufficient, or ok if combined
if (mgmtvars[i]=="AE") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="AE.level") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="reserve.desig") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
}
if (mgmtvars[i]=="mowing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff" | mdat$species=="curlew", "dunlin/ruff/curlew", as.character(mdat$species)) # combine dunlin + ruff + curlew
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
mdat <- subset(mdat, mowing!="applied")
}
if (mgmtvars[i]=="grazing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat <- subset(mdat, grazing!="reduced")
# mdat <- subset(mdat, species!="snipe" & species!="curlew")
}
if (mgmtvars[i]=="fertpest") {
mdat <- subset(mdat, fertpest!="applied") # remove applied level as causes non-convergence even for bglmer model
mdat <- subset(mdat, species=="black-tailed godwit" | species=="lapwing") # model convergence issues when oyc and redshank are included
# mdat <- subset(mdat, species!="snipe" & species!="curlew" & species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="nest.protect") {
mdat <- subset(mdat, species!="curlew" & species!="ruff") # 1 obs each; exclude rather than combine as interpretation for curlew/ruff combined doesn't make sense (too dissimilar in ecology)
}
if (mgmtvars[i]=="predator.control") {
# mdat <- subset(mdat, predator.control!="reduced")
mdat <- subset(mdat, species!="snipe" & species!="oystercatcher" & species!="redshank")
}
if (mgmtvars[i]=="water") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
mdat <- subset(mdat, water!="reduced")
# model runs ok without 2 of curlew, oystercatcher and snipe, but model won't converge and has a very high max|grad| value when more than 1 of these species is included. Since they all have no successes for this management intervention and similar levels of failure, then combine together for the water analysis
mdat <- subset(mdat, species!="curlew" & species!="snipe")
# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
summary(m.ind.sp$grazing)
mgmtvars[i]
mdat <- sppdat[sppdat[,mgmtvars[i]]!="none",]
table(mdat[,mgmtvars[i]], mdat$species, mdat$success)
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
# dunlin and ruff will need to be removed from most categories due to lack of observations, but there may be some with sufficient, or ok if combined
if (mgmtvars[i]=="AE") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="AE.level") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="reserve.desig") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
}
if (mgmtvars[i]=="mowing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff" | mdat$species=="curlew", "dunlin/ruff/curlew", as.character(mdat$species)) # combine dunlin + ruff + curlew
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
mdat <- subset(mdat, mowing!="applied")
}
if (mgmtvars[i]=="grazing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
# mdat <- subset(mdat, grazing!="reduced")
# mdat <- subset(mdat, species!="snipe" & species!="curlew")
}
if (mgmtvars[i]=="fertpest") {
mdat <- subset(mdat, fertpest!="applied") # remove applied level as causes non-convergence even for bglmer model
mdat <- subset(mdat, species=="black-tailed godwit" | species=="lapwing") # model convergence issues when oyc and redshank are included
# mdat <- subset(mdat, species!="snipe" & species!="curlew" & species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="nest.protect") {
mdat <- subset(mdat, species!="curlew" & species!="ruff") # 1 obs each; exclude rather than combine as interpretation for curlew/ruff combined doesn't make sense (too dissimilar in ecology)
}
if (mgmtvars[i]=="predator.control") {
# mdat <- subset(mdat, predator.control!="reduced")
mdat <- subset(mdat, species!="snipe" & species!="oystercatcher" & species!="redshank")
}
if (mgmtvars[i]=="water") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
mdat <- subset(mdat, water!="reduced")
# model runs ok without 2 of curlew, oystercatcher and snipe, but model won't converge and has a very high max|grad| value when more than 1 of these species is included. Since they all have no successes for this management intervention and similar levels of failure, then combine together for the water analysis
mdat <- subset(mdat, species!="curlew" & species!="snipe")
# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], "*species + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ species + (1|reference)")
}
# run a normal glmer model
m.ind.sp[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# if ANY checkzeros==0, then there are categories which are missing any observations whatsoever, so will have problems with complete separation and/or convergence
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer, based on the dimensions of the covariance matrix from the regular glmer model
vcov.dim <- nrow(vcov(m.ind.sp[[i]]))
m.ind.sp.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
summary(m.ind.sp[[i]])
sppdat <- dat
# identify which categories have low numbers
out <- list()
for(i in 1:length(mgmtvars)) {
out[[i]] <- table(sppdat$species, sppdat[,mgmtvars[i]])
}
names(out) <- mgmtvars
out
# set up list to output models and model datasets to
m.ind.sp <- list()
m.ind.sp.blme <- list()
usedat <- list() # data subset used to run a model
for (i in 1:length(mgmtvars)) {
mgmtvars[i]
mdat <- sppdat[sppdat[,mgmtvars[i]]!="none",]
table(mdat[,mgmtvars[i]], mdat$species, mdat$success)
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
# dunlin and ruff will need to be removed from most categories due to lack of observations, but there may be some with sufficient, or ok if combined
if (mgmtvars[i]=="AE") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="AE.level") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="reserve.desig") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
}
if (mgmtvars[i]=="mowing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff" | mdat$species=="curlew", "dunlin/ruff/curlew", as.character(mdat$species)) # combine dunlin + ruff + curlew
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
mdat <- subset(mdat, mowing!="applied")
}
if (mgmtvars[i]=="grazing") {
# mdat$species <- ifelse(mdat$species=="dunlin" | mdat$species=="ruff", "dunlin/ruff", as.character(mdat$species)) # combine dunlin + ruff since only 1 obs of each
mdat <- subset(mdat, species!="dunlin" & species!="ruff" & species!="curlew")
# mdat <- subset(mdat, grazing!="reduced")
# mdat <- subset(mdat, species!="snipe" & species!="curlew")
}
if (mgmtvars[i]=="fertpest") {
mdat <- subset(mdat, fertpest!="applied") # remove applied level as causes non-convergence even for bglmer model
mdat <- subset(mdat, species=="black-tailed godwit" | species=="lapwing") # model convergence issues when oyc and redshank are included
# mdat <- subset(mdat, species!="snipe" & species!="curlew" & species!="dunlin" & species!="ruff")
}
if (mgmtvars[i]=="nest.protect") {
mdat <- subset(mdat, species!="curlew" & species!="ruff") # 1 obs each; exclude rather than combine as interpretation for curlew/ruff combined doesn't make sense (too dissimilar in ecology)
}
if (mgmtvars[i]=="predator.control") {
# mdat <- subset(mdat, predator.control!="reduced")
mdat <- subset(mdat, species!="snipe" & species!="oystercatcher" & species!="redshank")
}
if (mgmtvars[i]=="water") {
mdat <- subset(mdat, species!="dunlin" & species!="ruff")
mdat <- subset(mdat, water!="reduced")
# model runs ok without 2 of curlew, oystercatcher and snipe, but model won't converge and has a very high max|grad| value when more than 1 of these species is included. Since they all have no successes for this management intervention and similar levels of failure, then combine together for the water analysis
mdat <- subset(mdat, species!="curlew" & species!="snipe")
# mdat$species <- ifelse(mdat$species=="curlew" | mdat$species=="snipe", "curlew/snipe", as.character(mdat$species))
}
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$species, mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], "*species + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ species + (1|reference)")
}
# run a normal glmer model
m.ind.sp[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# if ANY checkzeros==0, then there are categories which are missing any observations whatsoever, so will have problems with complete separation and/or convergence
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer, based on the dimensions of the covariance matrix from the regular glmer model
vcov.dim <- nrow(vcov(m.ind.sp[[i]]))
m.ind.sp.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
}
# m <- bglmer(success ~ species + lit.type + (1|reference), data=usedat[[1]], family=binomial, fixef.prior = normal(sd=3), control=glmerControl(optimizer="bobyqa"))
# anova(m,update(m,~.-species))
names(m.ind.sp) <- mgmtvars
names(m.ind.sp.blme) <- mgmtvars
names(usedat) <- mgmtvars
warningmessages.lme4 <- lapply(m.ind.sp, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.lme4
warningmessages.blme <- lapply(m.ind.sp.blme, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.blme
### ANALYSIS ###
# subset dataset to remove recruitment and survival metrics, too few observations
metricdat <- subset(dat, new.metric!="recruitment" & new.metric!="survival")
metricdat <- droplevels(metricdat)
# identify which categories have low numbers
out <- list()
for(i in 1:length(mgmtvars)) {
out[[i]] <- table(metricdat$new.metric, metricdat[,mgmtvars[i]])
}
names(out) <- mgmtvars
out
# set up list to output models and model datasets to
m.ind.sp <- list()
m.ind.sp.blme <- list()
usedat <- list() # data subset used to run a model
checkzeros <- list()
summary(dat$new.metric)
table(dat$new.metric)
#=================================  SET LOGIC STATEMENTS  ====================
bias <- FALSE
#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","car","blme","tidyr","nlme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  LOAD FUNCTIONS =================================
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
#=================================  LOAD DATA  ===============================
source(paste(scriptswd, "2_meta-analysis_data preparation.R", sep="/"))
metricdat <- subset(dat, new.metric!="recruitment" & new.metric!="survival")
metricdat <- droplevels(metricdat)
table(metricdat$new.metric)
# identify which categories have low numbers
out <- list()
for(i in 1:length(mgmtvars)) {
out[[i]] <- table(metricdat$new.metric, metricdat[,mgmtvars[i]])
}
names(out) <- mgmtvars
out
# set up list to output models and model datasets to
m.ind.sp <- list()
m.ind.sp.blme <- list()
usedat <- list() # data subset used to run a model
checkzeros <- list()
