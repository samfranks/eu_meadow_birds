mtext("Intervention", side=1, outer=TRUE, line=1.5, cex=1.2)
mtext("Predicted probability of success \n (significant positive impact)", side=2, outer=TRUE, cex=1.2, line=1.5)
### ---- Fig 2b: AES level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2b
maxspecies <- levels(do.call(rbind, plotdat)$species)
n <- length(maxspecies)
set.seed(2)
pch <- data.frame(species=maxspecies, pch=rep(c(21,22,23,24,25),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), replace=TRUE, n))
pch
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
# text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("basic AES","higher AES"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
abline(h=0.05, lty=3, lwd=2)
mtext("b)", side=3, adj=0, line=1)
# ==== Fig 2c and 2d - METRIC ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0c.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0c_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, metric=moddat[[i]]$new.metric, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, metric=unique.fits$metric), mean)
}
names(plotdat) <- mgmtvars
fig2c <- do.call(rbind, plotdat[c("AE","reserve.desig")])
fig2d <- do.call(rbind, plotdat[c("AE.level")])
### ---- Fig 2c: Policy level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2c
maxmetric <- levels(do.call(rbind, plotdat)$metric)
n <- length(maxmetric)
set.seed(2)
pch <- data.frame(metric=maxmetric, pch=rep(c(21,22,23),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), n))
pch
plotfinal <- merge(plotfinal,pch, by="metric")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$metric),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid)-0.5,max(plotfinal$rowid)+0.2), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","site protection"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=successlevel, lty=3, lwd=2)
legend("topleft", legend=pch$metric, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.05))
mtext("c)", side=3, adj=0, line=1)
### ---- Fig 2d: AES level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2d
maxmetric <- levels(do.call(rbind, plotdat)$metric)
n <- length(maxmetric)
set.seed(2)
pch <- data.frame(metric=maxmetric, pch=rep(c(21,22,23),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), n))
pch
plotfinal <- merge(plotfinal,pch, by="metric")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$metric),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid)-0.5,max(plotfinal$rowid)+0.2), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
# text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("basic AES","higher AES"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.05, lty=3, lwd=2)
mtext("d)", side=3, adj=0, line=1)
dev.off()
# ==============================  FIGURE 3  - SPECIFIC MANAGEMENT INTERVENTIONS ===================================
# Fig 3a = specific measures overall (Analysis 0a)
# Fig 3b = specific measures by species (Analysis 0b)
# Fig 3c = specific measures by metric (Analysis 0c)
png("Fig3_specifc management_overall_species_metric.png", res=300, height=18, width=18, units="in", pointsize=22)
par(mfrow=c(3,1), oma=c(3,5,1,1))
# ==== Fig 3a - OVERALL ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0a.rds", sep="/")) #[c("AE","reserve.desig")]
mod <- readRDS(paste(workspacewd, "models_0a_lme4.rds", sep="/")) #[c("AE","reserve.desig")]
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
n <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
n[i] <- nrow(moddat[[i]])
fits <- data.frame(pred,pred.CI,lit.type=moddat[[i]][,"lit.type"],mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]))
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar), mean)
}
names(plotdat) <- mgmtvars #c("AE","reserve.desig")
fig3a <- do.call(rbind, plotdat[4:9])
### ---- Fig 3a: Specific management interventions plot ----
par(mar=c(5,3,3,2))
plotfinal <- fig3a
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1, bty="n", xlim=c(min(x)-0.5, max(x)+0.5))
# axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.03, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \napplied", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/\npesticides \napplied","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied", "water \nreduced"))
# text(x, par("usr")[3]-0.06, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing applied", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n applied","fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","water \n applied", "water \n reduced"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=successlevel, lty=3, lwd=2)
mtext("a)", side=3, adj=0, line=2)
mtext("Intervention", side=1, outer=TRUE, line=1.5, cex=1.2)
mtext("Predicted probability of success \n (significant positive impact)", side=2, outer=TRUE, cex=1.2, line=1.5)
# ==== Fig 3b - SPECIES ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0b.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0b_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, species=moddat[[i]]$species, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, species=unique.fits$species), mean)
}
names(plotdat) <- mgmtvars
fig3b <- do.call(rbind, plotdat[4:9])
### ---- Fig 3b: Specific management interventions plot - SPECIES ----
par(mar=c(5,3,3,2))
plotfinal <- fig3b
maxspecies <- levels(do.call(rbind, plotdat)$species)
n <- length(maxspecies)
set.seed(2)
pch <- data.frame(species=maxspecies, pch=rep(c(21,22,23,24,25),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), replace=TRUE, n))
pch
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
# text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
text(xloc.mgmtvars, par("usr")[3]-0.03, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \nreduced", "grazing \napplied", "grazing \nreduced","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.05, lty=3, lwd=2)
mtext("b)", side=3, adj=0, line=2.5)
legend("topleft", legend=pch$species, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.15))
# legend(, legend=pch$species, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE)
# dev.off()
# ==== Fig 3b - METRIC ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0c.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0c_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, metric=moddat[[i]]$new.metric, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, metric=unique.fits$metric), mean)
}
names(plotdat) <- mgmtvars
fig3c <- do.call(rbind, plotdat[4:9])
### ---- Fig 3c: Specific management interventions plot - METRIC ----
par(mar=c(5,3,3,2))
plotfinal <- fig3c
maxmetric <- levels(do.call(rbind, plotdat)$metric)
n <- length(maxmetric)
set.seed(2)
pch <- data.frame(metric=maxmetric, pch=rep(c(21,22,23),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), n))
pch
plotfinal <- merge(plotfinal,pch, by="metric")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$metric),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \napplied","mowing \nreduced", "grazing \napplied", "grazing \nreduced","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied", "water \nreduced"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.05, lty=3, lwd=2)
mtext("c)", side=3, adj=0, line=2.5)
legend("topleft", legend=pch$metric, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.2))
dev.off()
# ===============  FIGURE S4b - Ranked invervention combination success rates  ==================
setwd(outputwd)
png("FigS5b_specific combination intervention success.png", res=300, height=15, width=30, units="in", pointsize=20)
par(mfrow=c(2,1))
par(mar=c(1,8,3,2))
plotdat <- readRDS(file=paste(workspacewd, "2b_all combinations plotting dataset.rds", sep="/"))
x <- c(1:nrow(plotdat))-0.5 # gives an x axis to plot against
plot(plotdat$pred~x, pch=16, cex=1.5, ylim=c(0,1), xaxt="n", xlab="", ylab="", las=1, bty="n", xlim=c(1,26))
arrows(x, plotdat$pred, x, plotdat$lwr, angle=90, length=0.05) # add error bars, lwr and upr to each prediction
arrows(x, plotdat$pred, x, plotdat$upr, angle=90, length=0.05)
abline(h=0.05, lty=3, lwd=2) # add a 'significance' line (what is the threshold for 'success'?)
abline(v=max(which(plotdat$sig=="N")), lty=3, lwd=2) # add a line dividing 'successful' vs 'unsuccessful' intervention combos
title(xlab="Intervention combination", cex.lab=1.5, font=2, line=0, xpd=TRUE)
title(ylab="Predicted probability of success \n (significant positive impact) ", cex.lab=1.5, font=2, line=3)
mtext("b)", side=3, adj=0, line=1, cex=1.2)
### Create a 'table' of intervention combinations to display below the plot showing the predicted success ###
y <- length(mgmtvars[4:9]):1 # how many interventions there are (will be labels down the y-axis of the table starting at the top and working down)
# create the table of coordinates for the table (centres of the grid cells for the table), which is 28 across (the number of different intervention combinations) x 6 down (the number of types of interventions)
x <- c(1:nrow(plotdat))
new.x <- rep(x, each=max(y))
new.y <- rep(y, times=max(x))
tab <- data.frame(x=new.x,y=new.y)
tab <- tab[order(tab$y, decreasing=TRUE),]
labs <- plotdat[,1:6]
labs.long <- gather(labs, intervention, level, mowing:water) # convert the interventions from wide to long format using tidyr
# merge the table of x,y coordinates with the intervention labels
# replace all levels of 'none' with a blank
tab.filled <- data.frame(tab, labs.long)
tab.filled[4] <- apply(tab.filled[4], 2, function(x) {
gsub("none", "", x)
})
# create a dataframe with x,y coordinates for the locations of the total number of interventions used
total.interventions <- data.frame(x, y=rep(0, times=length(x)), intervention=rep("", length(x)), sum=plotdat$num.interventions.sum)
# set up the plot of the 'table'
par(mar=c(1,8,1,2)) # give a big left margin to write the intervention names; margin for above plot needs to be exactly the same so everything lines up
plot(tab, type="n", bty="n", xaxt="n", yaxt="n", xlab="", ylab="", ylim=c(0.2,6.8), xlim=c(1,26)) # plot a completely blank plot, with ylims and xlims only (will draw the table using abline; use exactly the same xlims as the actual data plot above so that everything lines up
abline(v=c(min(x)-1,x,max(x)), h=c(7,y,0), lty=1) # draw the lines of the table (really the 'inner lines'), but adding 1 extra to each of top, bottom and sides to complete the outline of the table (otherwise will be inner lines only)
abline(v=max(which(plotdat$sig=="N")), lty=1, lwd=4) # thick line showing division between 'successful' and 'unsuccessful' combinations of interventions
axis(2, y+0.5, labels=c("mowing","grazing","fertiliser/\npesticides", "nest protection","predator control", "water"), las=1, cex.axis=1, font=2,tick=FALSE) # draw the labels for the rows, from top to bottom
text(tab$x-0.5, tab$y+0.5, labels=ifelse(tab.filled$level=="applied", "\U2191", ifelse(tab.filled$level=="reduced", "\U2193", tab.filled$level)), cex=2) # fill in the values of the grid cells, but if an intervention was applied then use a unicode 'up' arrow, and if it was reduced than use a down arrow
text(tab$x-0.5, 0.5, labels=total.interventions$sum, cex=1) # add the total number of interventions to the bottom 'row' of the table
dev.off()
# ===============  FIGURE S5a - Average invervention combination success rates  ==================
setwd(outputwd)
png("FigS5a_specific combination intervention success_average.png", res=300, height=12, width=26, units="in", pointsize=20)
plotdat <- readRDS(file=paste(workspacewd, "2b_average intervention plotting dataset.rds", sep="/"))
par(mar=c(6,6,3,2))
x <- c(1:nrow(plotdat)) # gives an x axis to plot against
plot(plotdat$pred~x, pch=16, cex=1.5, ylim=c(0,1), xaxt="n", xlab="", ylab="", las=1, bty="n")
arrows(x, plotdat$pred, x, plotdat$lwr, angle=90, length=0.05) # add error bars, lwr and upr to each prediction
arrows(x, plotdat$pred, x, plotdat$upr, angle=90, length=0.05)
abline(h=0.05, lty=3, lwd=2)
# axis(1, x, labels=rep("",nrow(plotdat)), tick=TRUE)
text(x, par("usr")[3]*2, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \napplied","mowing \nreduced","grazing \napplied","grazing \nreduced","fertiliser/\npesticides \napplied","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied", "water \nreduced"), cex=1)
title(xlab="Intervention (controlling for other interventions used)", cex.lab=1.5, font=2, line=5, xpd=TRUE)
title(ylab="Predicted probability of success \n (significant positive impact) ", cex.lab=1.5, font=2, line=3)
mtext("a)", side=3, adj=0, line=1, cex=1.2)
dev.off()
setwd(outputwd)
moddat <- readRDS(paste(workspacewd, "model dataset_3a.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_3a_lme4.rds", sep="/"))
plotdat <- list()
n <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
n[i] <- nrow(moddat[[i]])
fits <- data.frame(pred,pred.CI,lit.type=moddat[[i]][,"lit.type"],mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]))
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar), mean)
}
plotfinal <- do.call(rbind, plotdat)
###-------- Output plot --------###
png("FigS6_overall model results_failures.png", res=300, height=12, width=28, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.06, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic \nAES","higher \nAES","site \nprotection", "mowing \napplied", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/\npesticides \n applied","fertiliser/\npesticides \n reduced","nest \nprotection \n applied","water \napplied", "water \nreduced"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of failure \n (significant negative impact)", cex.lab=1.5, font=2, line=3)
abline(h=successlevel, lty=3, lwd=2)
abline(v=4.5, lty=3, lwd=2)
dev.off()
#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","car","blme","tidyr","nlme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  LOAD FUNCTIONS =================================
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
#=================================  LOAD DATA  ===============================
source(paste(scriptswd, "2_meta-analysis_data preparation.R", sep="/"))
#=================================  LOAD DATA  ===============================
source(paste(scriptswd, "2_meta-analysis_data preparation.R", sep="/"))
#================================== Test effect of nuisance variables on success for the full dataset ===========================
vars <- c("study.length","sample.size","analysis2","lit.type","score","biased.metric")
m.global <- glmer(success ~ study.length + sample.size + analysis2 + lit.type + score + biased.metric + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
m <- list()
for (i in 1:length(vars)) {
m[[i]] <- drop1(m.global, scope = as.formula(paste("~", vars[i], sep="")), test="Chisq")
}
# m.nui0 <- glmer(success ~ study.length + sample.size + analysis2 + lit.type + score + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# summary(m.nui0)
#
# m.nui1 <- glmer(success ~ study.length + sample.size + analysis2 + lit.type*score + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# summary(m.nui1)
#
# m.nui2 <- glmer(success ~ study.length + sample.size + analysis2 + score + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# summary(m.nui2)
#
# m.nui3 <- glmer(success ~ study.length + sample.size + analysis2 + lit.type*score + biased.metric + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# summary(m.nui3)
#
# m.nui4 <- glmer(success ~ study.length + sample.size + analysis2 + biased.metric + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# summary(m.nui4)
setwd(outputwd)
sink(paste("model output_nuisance variables.txt", sep=" "))
cat("\n########==========  Nuisance variables - Likelihood ratio tests for each variable in global model ==========########\n", sep="\n")
print(summary(m.global))
# cat("\n###---  Likelihood Ratio Tests ---###\n", sep="\n")
# print(m)
#
# cat("\n########==========  Nuisance variables - set 0 - lit.type - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui0))
#
# cat("\n########==========  Nuisance variables - set 1 - lit.type*score - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui1))
#
# cat("\n########==========  Nuisance variables - set 2 - score - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui2))
#
# cat("\n########==========  Nuisance variables - set 3 - lit.type*score + biased.metric - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui3))
#
# cat("\n########==========  Nuisance variables - set 4 - biased.metric - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui4))
sink()
setwd(outputwd)
sink(paste("model output_nuisance variables.txt", sep=" "))
cat("\n########==========  Nuisance variables - Likelihood ratio tests for each variable in global model ==========########\n", sep="\n")
print(summary(m.global))
cat("\n###---  Likelihood Ratio Tests ---###\n", sep="\n")
print(m)
# cat("\n########==========  Nuisance variables - set 0 - lit.type - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui0))
#
# cat("\n########==========  Nuisance variables - set 1 - lit.type*score - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui1))
#
# cat("\n########==========  Nuisance variables - set 2 - score - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui2))
#
# cat("\n########==========  Nuisance variables - set 3 - lit.type*score + biased.metric - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui3))
#
# cat("\n########==========  Nuisance variables - set 4 - biased.metric - lme4 models ==========########\n", sep="\n")
# print(summary(m.nui4))
sink()
m
summary(m[[1]])
m[[1]]
names(m[[1]])
m[[1]]$LRT
m[[1]]$LRT[2]
lapply(m, function(x) {
modout <- data.frame(x$LRT[2], x["Pr(Chi)"][2])
return(modout)
})
m[[1]]["Pr(Chi)"]
m[[1]]["Pr(Chi)"][2]
m[[1]][,"Pr(Chi)"][2]
lapply(m, function(x) {
modout <- data.frame(x[,"LRT"][2], m[[1]][,"Pr(Chi)"][2])
return(modout)
})
lapply(m, function(x) {
modout <- data.frame(LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
})
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
})
install.packages("dplyr")
library(dplyr)
?'%>%'
}) %>% do.call(rbind)
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind)
}) %>% rbind
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% rbind
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% x
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .)
x <- lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .)
x
lapply(m,names)
names(m)
m
names(m[[1]])
summary(m[[1]])
call(m[[1]])
m[[1]]
}) %>% do.call(rbind, .) %>% mutate()
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .) %>% mutate(vars)
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .) %>% mutate(vars,.)
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .) %>% mutate(vars)
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .) %>% mutate(vars) %>% write.csv(paste(outputwd, "model output_nuisance variables table.csv", sep="/"))
# output table of nuisance variable LRT results
lapply(m, function(x) {
modout <- data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2])
return(modout)
}) %>% do.call(rbind, .) %>% mutate(vars) %>% write.csv(paste(outputwd, "model output_nuisance variables table.csv", sep="/"), row.names=FALSE)
# output table of nuisance variable LRT results
lapply(m, function(x) {
data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=m[[1]][,"Pr(Chi)"][2]) %>% return
}) %>% do.call(rbind, .) %>% mutate(vars)
# output table of nuisance variable LRT results
lapply(m, function(x) {data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=x[,"Pr(Chi)"][2]) %>% return
}) %>%
do.call(rbind, .) %>%
mutate(vars) %>%
write.csv(paste(outputwd, "model output_nuisance variables table.csv", sep="/"), row.names=FALSE)
# output table of nuisance variable LRT results
lapply(m, function(x) {data.frame(df=x[,"Df"][2], LRT=x[,"LRT"][2], pval=x[,"Pr(Chi)"][2]) %>% return
}) %>%
do.call(rbind, .) %>%
mutate(vars) %>%
write.csv(paste(outputwd, "model output_nuisance variables table.csv", sep="/"), row.names=FALSE)
