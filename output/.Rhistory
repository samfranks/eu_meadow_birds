y <- x[x[mgmtvars[i]] != "none",] # remove the cases where intervention not evaluated
y
level.prop.all <- as.data.frame(do.call(rbind, intervensum.level.prop))
level.prop.all$level1 <- level.prop.all$basic
level.prop.all$level2 <- level.prop.all$higher
# level.prop.all$level2 <- ifelse(level.prop.all$basic==level.prop.all$higher, 0, level.prop.all$higher)
level.prop.all$level2[which(rownames(level.prop.all) %in% c("AE","reserve.desig","nest.protect"))] <- 0
level.prop.all <- level.prop.all[-which(rownames(level.prop.all) %in% "AE.level"),]
(level.prop.all <- t(level.prop.all[,c("level1","level2")]))
png(paste(outputwd, "summary_proportion of studies by intervention_level.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(level.prop.all, las=1, col=c("grey90","grey30"), beside=FALSE, ylim=c(0,0.6), xaxt="n")
text(x, par("usr")[3]-0.02, srt = 30, adj=1, xpd = TRUE, labels = c("AES","AES level","nature reserve/ \n designation", "mowing","grazing","fertiliser/ \n pesticides","nest \n protection","predator \n control","water \n management"))
title(xlab="Management intervention", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", max(d1$reference), ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, intervensum.prop[c(1,1,2:8)]+0.02, intervensum[c(1,1,2:8)]) # sample sizes for each intervention type
dev.off()
level.prop.all <- as.data.frame(do.call(rbind, intervensum.level.prop))
level.prop.all$level1 <- level.prop.all$basic
level.prop.all$level2 <- level.prop.all$higher
# level.prop.all$level2 <- ifelse(level.prop.all$basic==level.prop.all$higher, 0, level.prop.all$higher)
level.prop.all$level2[which(rownames(level.prop.all) %in% c("AE","reserve.desig","nest.protect"))] <- 0
# level.prop.all <- level.prop.all[-which(rownames(level.prop.all) %in% "AE.level"),]
(level.prop.all <- t(level.prop.all[,c("level1","level2")]))
png(paste(outputwd, "summary_proportion of studies by intervention_level.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(level.prop.all, las=1, col=c("grey90","grey30"), beside=FALSE, ylim=c(0,0.6), xaxt="n")
text(x, par("usr")[3]-0.02, srt = 30, adj=1, xpd = TRUE, labels = c("AES","AES level","nature reserve/ \n designation", "mowing","grazing","fertiliser/ \n pesticides","nest \n protection","predator \n control","water \n management"))
title(xlab="Management intervention", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", max(d1$reference), ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, intervensum.prop[c(1,1,2:8)]+0.02, intervensum[c(1,1,2:8)]) # sample sizes for each intervention type
dev.off()
intervensum.level
level.prop.all <- as.data.frame(do.call(rbind, intervensum.level.prop))
level.prop.all$level1 <- level.prop.all$basic
level.prop.all$level2 <- level.prop.all$higher
# level.prop.all$level2 <- ifelse(level.prop.all$basic==level.prop.all$higher, 0, level.prop.all$higher)
level.prop.all <- level.prop.all[-which(rownames(level.prop.all) %in% c("AE","reserve.desig","nest.protect"))]
# level.prop.all <- level.prop.all[-which(rownames(level.prop.all) %in% "AE.level"),]
(level.prop.all <- t(level.prop.all[,c("level1","level2")]))
level.prop.all <- as.data.frame(do.call(rbind, intervensum.level.prop))
level.prop.all$level1 <- level.prop.all$basic
level.prop.all$level2 <- level.prop.all$higher
# level.prop.all$level2 <- ifelse(level.prop.all$basic==level.prop.all$higher, 0, level.prop.all$higher)
level.prop.all <- level.prop.all[-which(rownames(level.prop.all) %in% c("AE","reserve.desig","nest.protect")),]
level.prop.all
(level.prop.all <- t(level.prop.all[,c("level1","level2")]))
which(names(level.prop.all) %in% mgmtvars)
names(level.prop.all)
level.prop.all
names(level.prop.all)
colnames(level.prop.all)
which(colnames(level.prop.all) %in% mgmtvars)
png(paste(outputwd, "summary_proportion of studies by intervention_level.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(level.prop.all, las=1, col=c("grey90","grey30"), beside=FALSE, ylim=c(0,0.6), xaxt="n")
text(x, par("usr")[3]-0.02, srt = 30, adj=1, xpd = TRUE, labels = c("AES level","mowing","grazing","fertiliser/ \n pesticides","predator \n control","water \n management"))
title(xlab="Management intervention", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", max(d1$reference), ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, intervensum.prop[which(colnames(level.prop.all) %in% mgmtvars)]+0.02, intervensum[which(colnames(level.prop.all) %in% mgmtvars)]) # sample sizes for each intervention type
dev.off()
apply(level.prop.all,1,sum)
apply(level.prop.all,2,sum)
intervensum.level
level.all <- as.data.frame(do.call(rbind, intervensum.level))
level.all
names(intervensum.level) <- mgmtvars
level.all <- as.data.frame(do.call(rbind, intervensum.level))
level.all
level.all <- level.all[-which(rownames(level.all) %in% c("AE","reserve.desig","nest.protect")),]
level.all
level.sum <- apply(level.all,1,sum)
level.sum
png(paste(outputwd, "summary_proportion of studies by intervention_level.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(level.prop.all, las=1, col=c("grey90","grey30"), beside=FALSE, ylim=c(0,0.6), xaxt="n")
text(x, par("usr")[3]-0.02, srt = 30, adj=1, xpd = TRUE, labels = c("AES level","mowing","grazing","fertiliser/ \n pesticides","predator \n control","water \n management"))
title(xlab="Management intervention", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", max(d1$reference), ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, apply(level.prop.all,2,sum)+0.02, level.sum) # sample sizes for each intervention type
dev.off()
#---------- Proportion of studies examining the effect of an intervention type, by species ----------
### determine how many studies evaluated the effect of the intervention (repeat for each intervention)
# create blank objects
intervensum <- list()
intervensum.prop <- list()
# mgmtvars to evluate, minus AE.level
eval.mgmtvars <- mgmtvars[-which(mgmtvars %in% "AE.level")]
for (i in 1:length(eval.mgmtvars)) {
# number of unique cases (i.e. unique studies) where mgmtvar level != 'none'
x <- unique(d1[,c("reference","species",eval.mgmtvars[i])]) # unique references and levels of the intervention
y <- x[x[eval.mgmtvars[i]] != "none",] # remove the cases where intervention not evaluated
intervensum[[i]] <- table(y$species)
}
intervensum.all <- do.call(cbind, intervensum)
colnames(intervensum.all) <- eval.mgmtvars
intervensum.prop.all <- intervensum.all/max(d1$reference)
# creates grey-scale colour vector for plotting, but randomly shuffled so darks don't end up next to each other
set.seed(3)
# colourvec <- sample(grey(seq(from=0,to=1,length.out = 8)), 8)
colourvec <- grey(seq(from=1,to=0,length.out = 8))
png(paste(outputwd, "summary_proportion of studies by intervention by species.png", sep="/"), res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(intervensum.prop.all, beside=TRUE, las=1, col=colourvec, ylim=c(0,0.4), xaxt="n")
text(apply(x,2,mean), par("usr")[3]-0.02, srt = 0, xpd = TRUE, labels = c("AES","nature reserve/ \n designation", "mowing","grazing","fertiliser/ \n pesticides","nest \n protection","predator \n control","water \n management"))
title(xlab="Management intervention", font=2, cex.lab=1.2, line=3)
title(ylab=paste("Proportion of total studies (n=", max(d1$reference), ")", sep=""), font=2, cex.lab=1.2, line=3)
legend("topright",legend=rownames(intervensum.prop.all), pch=rep(22,8), col="black",pt.bg=colourvec, cex=1, pt.cex=1.5, bty="n")
# text(x, intervensum.prop.all+0.02, intervensum.all) # sample sizes for each intervention type
dev.off()
#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","car","blme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
#=================================  LOAD DATA  ===============================
dat0 <- readRDS(paste(workspacewd, "meadow birds analysis dataset_full.rds", sep="/"))
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
# subset dataset for analysis to desired columns only
dat <- subset(dat0, select=c("reference","lit.type","country","study.length","habitat","species","overall.metric","metric","sample.size","analysis2","success",mgmtvars))
head(dat)
tail(dat)
#------------  Recode management variables as factors for analysis and make 'none' the reference level -----------------
for (i in 1:length(mgmtvars)) {
dat[,mgmtvars[i]] <- as.factor(dat[,mgmtvars[i]])
dat[,mgmtvars[i]] <- relevel(dat[,mgmtvars[i]], ref="none")
print(levels(dat[,mgmtvars[i]]))
}
#=================================  ANALYSIS  ===============================
# Analysis evaluates whether one or several management interventions has a significantly positive outcome (i.e. is successful) compared to the baseline reference situation (which in most cases is no management)
# reference level for all interventions is 'none', so management (either applied or reduced, depending on the intervention) is evaluated against the reference
# 0a) success of individual management types overall
# 0b) success of individual management types by species
# 1a) success of AES and nature reserves
# 1b) success of specific management interventions
# 2a) success of AES and nature reserves by species
# 2b) success of specific management interventions by species
# 3a) success of AES and nature reserves by different metrics (abundance vs reproductive success)
# 3b) success of specific management interventions by different metrics (abundance vs reproductive success)
# 4a) success of AES and nature reserves by reproductive success metrics (nest vs chick)
# 4b) success of specific management interventions by reproductive success metrics (nest vs chick)
# 5a) success of AES and nature reserves by abundance metrics (abundance vs abundance change)
# 5b) success of specific management interventions by abundance metrics (abundance vs abundance change)
# 6a) success of AES and nature reserves by habitat and species
# 6b) success of specific management interventions by habitat and species
### Nuisance explanatory variables and random effects
# 'nuisance explanatory variables: study duration (continuous), sample size (categorical: small, medium, large), multivariate/univariate (categorical)
# Random effects: study id - habitat will be included later on - have taken out country as a random effect since it causes problems in the analysis
#------------------------------ Test effect of nuisance variables on success for the full dataset -------------------------
m.nui1 <- glmer(success ~ study.length + sample.size + analysis2 + lit.type + (1|reference), data=dat, family=binomial, control=glmerControl(optimizer="bobyqa"))
summary(m.nui1)
# only significant effect of a nuisance variable is literature type
# primary literature study is more likely to be unsuccessful than successful
# include lit.type in subsequent analyses
# identify which categories have low numbers
out <- list()
for(i in 1:length(mgmtvars)) {
out[[i]] <- table(dat$success, dat[,mgmtvars[i]])
}
names(out) <- mgmtvars
out
# set up list to output models and model datasets to
m.ind <- list()
m.ind.blme <- list()
usedat <- list() # data subset used to run a model
for (i in 1:length(mgmtvars)) {
print(mgmtvars[i])
mdat <- dat[dat[,mgmtvars[i]]!="none",]
# for the following categories, subset further because there aren't enough observations of either 0,1 or both
#   if (mgmtvars[i]=="mowing") {
#     mdat <- subset(mdat, mowing!="applied")
#   }
#   if (mgmtvars[i]=="fertpest") {
#     mdat <- subset(mdat, fertpest!="applied")
#   }
if (mgmtvars[i]=="predator.control") {
mdat <- subset(mdat, predator.control!="reduced")
}
#   if (mgmtvars[i]=="water") {
#     mdat <- subset(mdat, water!="reduced")
#   }
mdat <- droplevels(mdat)
usedat[[i]] <- mdat
(checkzeros <- table(mdat[,mgmtvars[i]], mdat$success))
# create different formulas to use depending on whether management variable is 1 or 2 levels
if (length(levels(mdat[,mgmtvars[i]])) > 1) {
modform <- as.formula(paste("success ~ ", mgmtvars[i], " + lit.type + (1|reference)", sep=""))
}
if (length(levels(mdat[,mgmtvars[i]])) < 2) {
modform <- as.formula("success ~ 1 + lit.type + (1|reference)")
}
# run a normal glmer model
m.ind[[i]] <- glmer(modform, data=mdat, family=binomial, control=glmerControl(optimizer="bobyqa"))
# vars with warnings using glmer: mowing, fertpest, predator.control
# use bglmer since there are some cases of singularity produced by 0/1 not having any observations for some of the categorical variables
# calculate the dimensions of the covariance matrix for bglmer (diagonal matrix number of fixed effects) based on the number of levels present of all factor variables in the model - 1; if lit.type is included as a variable, then add the number of levels of lit.type to the calculations for the dimensions of the covariance matrix
vcov.dim <- length(levels(mdat[,mgmtvars[i]])) + length(levels(mdat$lit.type)) - 1
m.ind.blme[[i]] <- bglmer(modform, data=mdat, family=binomial, fixef.prior = normal(cov = diag(9,vcov.dim)), control=glmerControl(optimizer="bobyqa"))
}
names(m.ind) <- mgmtvars
names(m.ind.blme) <- mgmtvars
names(usedat) <- mgmtvars
warningmessages.lme4 <- lapply(m.ind, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.lme4
warningmessages.blme <- lapply(m.ind.blme, function(x) slot(x, "optinfo")$conv$lme4$messages)
warningmessages.blme
# ### lme4 convergence troubleshooting
# # check singularity
# tt <- getME(m.ind.blme[[5]],"theta")
# ll <- getME(m.ind.blme[[5]],"lower")
# min(tt[ll==0])
#
# # check gradient calculations
# derivs1 <- m.ind.blme[[5]]@optinfo$derivs
# sc_grad1 <- with(derivs1,solve(Hessian,gradient))
# max(abs(sc_grad1))
# max(pmin(abs(sc_grad1),abs(derivs1$gradient)))
### Output model results ###
setwd(outputwd)
sink(paste("model output_0a.txt", sep=" "))
cat("\n########==========  0a) success of individual management types - BLME models (good) ==========########\n", sep="\n")
print(lapply(m.ind.blme, summary))
cat("\n########==========  0a) success of individual management types - lme4 models (convergence issues) ==========########\n", sep="\n")
print(lapply(m.ind, summary))
cat("\n########==========  Warning messages BLME models (good) ==========########\n", sep="\n")
print(warningmessages.blme)
cat("\n########==========  Warning messages lme4 models (convergence issues) ==========########\n", sep="\n")
print(warningmessages.lme4)
sink()
### Save individual interventions models
saveRDS(m.ind, file=paste(workspacewd, "models_0a_lme4.rds", sep="/"))
saveRDS(m.ind.blme, file=paste(workspacewd, "models_0a_blme.rds", sep="/"))
### Save dataset for 0a models
saveRDS(usedat, file=paste(workspacewd, "model dataset_0a.rds", sep="/"))
set.seed(2)
#=================================  SET LOGIC STATEMENTS  ====================
# default to plot when both are FALSE is results from overall analysis (0a)
species <- FALSE # plot the species-specific model results (0b)
metric <- FALSE # plot the metric-specific model results (0c)
alphalevel <- 0.05
#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","car","blme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  LOAD FUNCTIONS =================================
### Ben Bolker's function for calculating CIs on predictions from a merMod object and plotting the results from his RPubs GLMM worked examples
# http://rpubs.com/bbolker/glmmchapter
# by specifying re.form=NA we're saying that we want the population-level prediction, i.e. setting the random effects to zero and getting a prediction for an average (or unknown) group
# Computing confidence intervals on the predicted values is relatively easy if we're willing to completely ignore the random effects, and the uncertainty of the random effects
# this easy method produces similar width CIs to using the bootMer function in lme4, perhaps slightly wider CIs in some cases
# can change to alpha=0.16, approximately equal to 84% CIs
easyPredCI <- function(model,newdata,alpha=alphalevel) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],
newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link (logistic) function: could also use plogis()
linkinv <- model@resp$family$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(lwr=pred0-crit*pred.se,
upr=pred0+crit*pred.se))
}
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
# load master dataset
dat0 <- readRDS(paste(workspacewd, "meadow birds analysis dataset_full.rds", sep="/"))
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
# subset master dataset to desired columns only
dat <- subset(dat0, select=c("reference","lit.type","country","study.length","habitat","species","overall.metric","metric","sample.size","analysis2","success",mgmtvars))
# load model data & models
if (!metric) {
if (!species) moddat <- readRDS(paste(workspacewd, "model dataset_0a.rds", sep="/"))
if (species) moddat <- readRDS(paste(workspacewd, "model dataset_0b.rds", sep="/"))
# load models
if (!species) mod <- readRDS(paste(workspacewd, "models_0a_blme.rds", sep="/"))
if (species) mod <- readRDS(paste(workspacewd, "models_0b_blme.rds", sep="/"))
}
if (metric) {
# load models & model data
moddat <- readRDS(paste(workspacewd, "model dataset_0c.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0c_blme.rds", sep="/"))
}
if (!metric) {
if (!species) {
# Output model coefficient tables for each management type, and convert parameter table to a dataframe instead of a matrix
coeftab <- lapply(mod, function(x) summary(x)$coefficients)
coeftab2 <- do.call(rbind, coeftab)
coeftab3 <- coeftab2
rownames(coeftab3) <- c(1:nrow(coeftab3))
coeftab3 <- as.data.frame(coeftab3)
# create a variable with the names of the different management interventions and their levels (if present)
mgmtvarlevels <- list()
for (i in 1:length(mgmtvars)) {
mgmtvarlevels[[i]] <- paste(mgmtvars[i], levels(moddat[[i]][,mgmtvars[i]]))
}
mgmtvarlevels <- unlist(mgmtvarlevels)
# calculate sample sizes of the datasets
n <- lapply(moddat, nrow)
n <- unlist(n)
# bind the two together to create a named parameter table with coefficients and their SEs against the relevant intervention
partable <- cbind(mgmtvarlevels,coeftab3)
partable <- partable[,c(1,2,3,5)] # omit z value column
names(partable) <- c("Management intervention evaluated","Estimate","SE","p-value")
# Write the parameter table
write.csv(format(partable, scientific=FALSE, digits=2),  "overall parameter table.csv", row.names=FALSE)
}
if (species) {
# Output model coefficient tables for each management type, and convert parameter table to a dataframe instead of a matrix
coeftab <- lapply(mod, function(x) summary(x)$coefficients)
coeftab2 <- do.call(rbind, coeftab)
coeftab3 <- coeftab2
rownames(coeftab3) <- c(1:nrow(coeftab3))
coeftab3 <- as.data.frame(coeftab3)
# bind the two together to create a named parameter table with coefficients and their SEs against the relevant intervention
partable <- cbind(parameters=rownames(coeftab2),coeftab3)
partable <- partable[,c(1,2,3,5)] # omit z value column
names(partable) <- c("Management intervention evaluated","Estimate","SE","p-value")
# Write the parameter table
write.csv(format(partable, scientific=FALSE, digits=2),  "species-specific parameter table.csv", row.names=FALSE)
}
}
mod
# Output model coefficient tables for each management type, and convert parameter table to a dataframe instead of a matrix
coeftab <- lapply(mod, function(x) summary(x)$coefficients)
coeftab2 <- do.call(rbind, coeftab)
coeftab3 <- coeftab2
rownames(coeftab3) <- c(1:nrow(coeftab3))
coeftab3 <- as.data.frame(coeftab3)
# create a variable with the names of the different management interventions and their levels (if present)
mgmtvarlevels <- list()
for (i in 1:length(mgmtvars)) {
mgmtvarlevels[[i]] <- paste(mgmtvars[i], levels(moddat[[i]][,mgmtvars[i]]))
}
mgmtvarlevels <- unlist(mgmtvarlevels)
# calculate sample sizes of the datasets
n <- lapply(moddat, nrow)
n <- unlist(n)
partable <- cbind(mgmtvarlevels,coeftab3)
coeftab3
mgmtvarlevels
coeftaab
coeftab
coeftab2
# set the wd to output to
setwd(outputwd)
if (!metric) {
if (!species) {
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred,pred.CI,lit.type=moddat[[i]][,"lit.type"],mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]))
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar), mean)
}
plotfinal <- do.call(rbind, plotdat)
###-------- Output plot --------###
png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1, bty="n")
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.06, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
title(xlab="Management intervention evaluated", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.5, lty=3, lwd=2)
dev.off()
###-------- Output table of predicted probabilities +/- CIs --------###
write.csv(plotfinal[,c("pred","lwr","upr","mgmtvar")], "overall probabilities and CIs.csv", row.names=FALSE)
}
if (species) {
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
plotdat[[i]] <- unique(data.frame(pred, pred.CI, species=moddat[[i]]$species, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]])))
}
plotfinal <- do.call(rbind, plotdat)
pch <- data.frame(species=levels(plotfinal$species), pch=c(21,22,24,25,21,22,24), col=sample(grey(seq(from=0,to=1,length.out = 7)), 7))
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
###-------- Output plot --------###
if (alphalevel==0.05) {
png("species-specific model results.png", res=300, height=12, width=30, units="in", pointsize=20)
} else {png("species-specific model results_84CIs.png", res=300, height=12, width=30, units="in", pointsize=20)}
par(mar=c(7,6,3,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
title(xlab="Management intervention evaluated", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.5, lty=3, lwd=2)
legend(0.5,1.1, legend=pch$species, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE)
dev.off()
###-------- Output table of predicted probabilities +/- CIs --------###
if (alphalevel==0.05) {
write.csv(plotfinal[,c("species","pred","lwr","upr","mgmtvar")], "species-specific probabilities and CIs.csv", row.names=FALSE)
} else {write.csv(plotfinal[,c("species","pred","lwr","upr","mgmtvar")], "species-specific probabilities and 84CIs.csv", row.names=FALSE)}
plotdat[[i]] <- unique(data.frame(pred, pred.CI, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]])))
fits <- data.frame(pred,pred.CI,lit.type=moddat[[i]][,"lit.type"],mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]))
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar), mean)
}
plotfinal <- do.call(rbind, plotdat)
png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention evaluated", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
dev.off()
plotfinal <- do.call(rbind, plotdat)
png("overall model results.png", res=300, height=12, width=24, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
# text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing applied","mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n applied", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","water \n applied", "water \n reduced"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention evaluated", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
dev.off()
}
coeftab
coeftab2
