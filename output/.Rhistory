for (i in 1:length(mgmtvars)) {
d0.3[d0.3[,mgmtvars[i]]=="",mgmtvars[i]] <- "none"
}
# management intervention variables
mgmtvars <- c("AE","basic.AE","higher.AE","reserve","designation","mowing","grazing","fertilizer","pesticide","nest.protect.ag","nest.protect.predation","groundwater.drainage","surface.water","predator.control","other.mgmt")
d0.3 <- d0.2
# recode manamgement vars as characters to be able to use string substitution find and replace to create generic applied, restricted, removed levels for all management types
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, as.character)
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, function(x) {
gsub("applied site scale", "applied", x)
})
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, function(x) {
gsub("applied landscape scale", "applied", x)
})
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, function(x) {
gsub("restricted site scale", "restricted", x)
})
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, function(x) {
gsub("restricted landscape scale", "restricted", x)
})
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, function(x) {
gsub("removed site scale", "removed", x)
})
d0.3[,mgmtvars] <- apply(d0.3[,mgmtvars], 2, function(x) {
gsub("removed landscape scale", "removed", x)
})
# plug 'none' into all the blanks where management intervention not used
for (i in 1:length(mgmtvars)) {
d0.3[d0.3[,mgmtvars[i]]=="",mgmtvars[i]] <- "none"
}
# recode sample size as small, medium, large
d0.3$sample.size <- ifelse(d0.3$sample.size=="small (< 30)", "small", ifelse(d0.3$sample.size=="medium (30-100)", "medium", "large"))
summary(d0.3$sample.size)
d0.3$sample.size
# redefine dataset
d0.4 <- d0.3
# # change management vars back to factors for analysis
# # d0.4[,mgmtvars] <- apply(d0.4[,mgmtvars], 2, function(x) as.factor(x)) # this line won't convert back to factors for some reason!
# for (i in 1:length(mgmtvars)) {
#   d0.4[,mgmtvars[i]] <- as.factor(d0.4[,mgmtvars[i]])
# }
# summary(d0.4)
### Add some additional grouping variables and the success variable
# success variable defined as 1 = significant positive effect, 0 = neutral or negative effect
d0.4$success <- ifelse(d0.4$sig=="Y" & d0.4$effect.dir=="positive", 1, 0) # success variable
# group fertilizer and pesticides into single variable
d0.4$fertpest <- ifelse(d0.4$fertilizer=="applied" | d0.4$pesticide=="applied",
"applied",
ifelse(d0.4$fertilizer=="restricted" | d0.4$pesticide=="restricted",
"restricted",
ifelse(d0.4$fertilizer=="removed" | d0.4$pesticide=="removed",
"removed", "none"))
)
# group groundwater.drainage and surface.water into single variable meaning 'more water'
# restricted/removed groundwater drainage equates to more water (same as applying surface water)
# combinations of drainage/surface water in dataset
unique(d0.4[,c("groundwater.drainage","surface.water")])
d0.4$water <- ifelse(d0.4$groundwater.drainage=="restricted" | d0.4$groundwater.drainage=="removed" & d0.4$surface.water=="applied", "applied", ifelse(d0.4$groundwater.drainage=="restricted" | d0.4$groundwater.drainage=="removed", "applied", ifelse(d0.4$surface.water=="applied", "applied", ifelse(d0.4$groundwater.drainage=="applied","restricted","none"))))
# group nest protection (predation and agricultural) variables together
unique(d0.4[,c("nest.protect.ag","nest.protect.predation")])
d0.4$nest.protect <- ifelse(d0.4$nest.protect.predation=="applied" | d0.4$nest.protect.ag=="applied", "applied","none")
# # group nest protection (predation) with predator control (more sensible than grouping it with nest protection for agriculture given predation measures are more likely to go together)
# unique(d0.4[,c("nest.protect.ag","nest.protect.predation","predator.control")])
# d0.4$predation.reduction <- ifelse(d0.4$nest.protect.predation=="applied" | d0.4$predator.control=="applied", "applied", ifelse(d0.4$predator.control=="restricted", "restricted", ifelse(d0.4$predator.control=="removed", "removed","none")))
# group reserves and site designations
d0.4$reserve.desig <- ifelse(d0.4$reserve=="applied" | d0.4$designation=="applied", "applied", "none")
# create a AE-level variable (with basic and higher as levels) for analysis 1a
# if no info was provided on type of AES, then assume it was basic rather than higher-level or targetted
d0.4$AE.level <- ifelse(d0.4$higher.AE=="applied", "higher", ifelse(d0.4$AE=="none", "none", "basic"))
# calculate study duration variable
d0.4$study.length <- d0.4$end.year - d0.4$start.year + 1
#------------- Definitive dataset --------------
# final dataset for analysis
d1 <- d0.4
# new set of management variables
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
# convert removed or restricted levels of the management vars (all but AE.level) to a single level of removed/restricted
# use find and replace with gsub
d1[,mgmtvars] <- apply(d1[,mgmtvars], 2, function(x) {
gsub("removed", "reduced", x)
})
d1[,mgmtvars] <- apply(d1[,mgmtvars], 2, function(x) {
gsub("restricted", "reduced", x)
})
### Save definitive dataset
saveRDS(d1, file=paste(workspacewd, "meadow birds analysis dataset.rds", sep="/"))
dat0 <- readRDS(paste(workspacewd, "meadow birds analysis dataset.rds", sep="/"))
mgmtvars2 <- mgmtvars[-which(mgmtvars %in% "AE")]
# subset dataset for analysis to desired columns only
dat <- subset(dat0, select=c("reference","country","study.length","habitat","species","overall.metric","sample.size","analysis2",mgmtvars2))
summary(dat)
apply(dat, 2, class)
class(dat$reference)
?class
apply(dat, 2, is.character)
is.character(dat$reference)
apply(dat, 1, is.character)
lapply(dat, class)
lapply(dat, is.character)
load("C:/Users/samf/Downloads/culcita.RData")
summary(culcita_dat)
?ftable
cmod_lme4_L <- glmer(predation~ttt+(1|block),data=culcita_dat,
family=binomial)
library(lme4)
cmod_lme4_L <- glmer(predation~ttt+(1|block),data=culcita_dat,
family=binomial)
print(summary(cmod_lme4_L),correlation=FALSE)
fixef(cmod_lme4_block)
newdat <- subset(culcita_dat,
abs(resid(cmod_lme4_L,"pearson"))<10)
cmod_lme4_L2 <- update(cmod_lme4_L,data=newdat)
str(newdat)
table(newdat$block,newdat$ttt)
table(culcita_dat$block,culcita_dat$ttt)
abs(resid(cmod_lme4_L,"pearson"))
resid(cmod_lme4_L)
?resid
?resid
?residuals.merMod
abs(resid(cmod_lme4_L,"pearson"))
str(newdat)
str(culcita_dat)
plot(cmod_lme4_L)
cmod_lme4_L2
summary(cmod_lme4_L2)
vcov(cmod_lme4_L)
cmod_blme_L2 <- bglmer(predation~ttt+(1|block),data=newdat,
family=binomial,
fixef.prior = normal(cov = diag(9,4)))
library(blme)
cmod_blme_L2 <- bglmer(predation~ttt+(1|block),data=newdat,
family=binomial,
fixef.prior = normal(cov = diag(9,4)))
summary(cmod_blme_L2)
summary(cmod_lme4_L)
summary(cmod_lme4_L,correlation=FALSE)
summary(cmod_blme_L2)
summary(cmod_lme4_L,correlation=FALSE)
summary(cmod_blme_L2,correlation=FALSE)
cmod_blme_L3 <- bglmer(predation~ttt+(1|block),data=culcita_dat,
family=binomial,
fixef.prior = normal(cov = diag(9,4)))
summary(cmod_blme_L3,correlation=FALSE)
summary(cmod_lme4_L,correlation=FALSE)
summary(cmod_lme4_L2,correlation=FALSE)
#=================================  SET LOGIC STATEMENTS  ====================
species <- FALSE # plot the species-specific model results (0b)
#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","car","blme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  LOAD FUNCTIONS =================================
### Ben Bolker's function for calculating CIs on predictions from a merMod object and plotting the results from his RPubs GLMM worked examples
# http://rpubs.com/bbolker/glmmchapter
# by specifying re.form=NA we're saying that we want the population-level prediction, i.e. setting the random effects to zero and getting a prediction for an average (or unknown) group
# Computing confidence intervals on the predicted values is relatively easy if we're willing to completely ignore the random effects, and the uncertainty of the random effects
# this easy method produces similar width CIs to using the bootMer function in lme4, perhaps slightly wider CIs in some cases
# can change to alpha=0.16, approximately equal to 84% CIs
easyPredCI <- function(model,newdata,alpha=0.05) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],
newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link (logistic) function: could also use plogis()
linkinv <- model@resp$family$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(lwr=pred0-crit*pred.se,
upr=pred0+crit*pred.se))
}
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
#=================================  LOAD DATA & MODELS  ===============================
# load master dataset
dat0 <- readRDS(paste(workspacewd, "meadow birds analysis dataset.rds", sep="/"))
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
# subset master dataset to desired columns only
dat <- subset(dat0, select=c("reference","country","study.length","habitat","species","overall.metric","sample.size","analysis2","success",mgmtvars))
# load model data
if (!species) moddat <- readRDS(paste(workspacewd, "model dataset_0a.rds", sep="/"))
if (species) moddat <- readRDS(paste(workspacewd, "model dataset_0b.rds", sep="/"))
# load models
if (!species) mod <- readRDS(paste(workspacewd, "models_0a.rds", sep="/"))
if (species) mod <- readRDS(paste(workspacewd, "models_0b_blme.rds", sep="/"))
#=================================  PLOT MODEL OUTPUTS  ===============================
# set the wd to output to
setwd(outputwd)
# create multipanel plot
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
plotdat[[i]] <- unique(data.frame(pred, pred.CI, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]])))
}
plotfinal <- do.call(rbind, plotdat)
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.08, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.1, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.15, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
plotfinal <- do.call(rbind, plotdat)
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.15, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(6,5,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.1, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", ylab="Predicted probability of success \n (significant positive impact)")
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(6,5,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=5)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,5,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2, line=3)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=7)
dev.off()
?title
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,5,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2, line=0)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=0)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,5,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2, line=2)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=0)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,5,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2, line=7)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=2)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=2.5)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention used", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
dev.off()
if (!species) png("overall model results.png", res=300, height=12, width=20, units="in", pointsize=20)
par(mar=c(7,6,2,2))
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
abline(h = 0.5, lty=3)
title(xlab="Management intervention evaluated", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
dev.off()
species<-TRUE
# load model data
if (!species) moddat <- readRDS(paste(workspacewd, "model dataset_0a.rds", sep="/"))
if (species) moddat <- readRDS(paste(workspacewd, "model dataset_0b.rds", sep="/"))
# load models
if (!species) mod <- readRDS(paste(workspacewd, "models_0a.rds", sep="/"))
if (species) mod <- readRDS(paste(workspacewd, "models_0b_blme.rds", sep="/"))
mod
plotdat <- list()
i<-1
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
pred
pred.CI
mod[[i]]
summary(mod[[i]])
i
x <- data.frame(pred, pred.CI, moddat[[i]]$species)
x
plotdat[[i]] <- unique(data.frame(pred, pred.CI, species=moddat[[i]]$species, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]])))
plotdat[[i]]
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
plotdat[[i]] <- unique(data.frame(pred, pred.CI, species=moddat[[i]]$species, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]])))
}
plotfinal <- do.call(rbind, plotdat)
plotfinal
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal
levels(plotfinal$species)
pch <- data.frame(levels(plotfinal$species), c(0,1,2,6,15,16,17))
plotfinal <- merge(plotfinal,pch)
plotfinal
pch <- data.frame(levels(plotfinal$species), c(0,1,2,6,15,16,17))
pch
pch <- data.frame(species=levels(plotfinal$species), pch=c(0,1,2,6,15,16,17))
plotfinal <- do.call(rbind, plotdat)
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
pch <- data.frame(species=levels(plotfinal$species), pch=c(0,1,2,6,15,16,17))
plotfinal <- merge(plotfinal,pch)
plotfinal
plotfinal <- do.call(rbind, plotdat)
pch <- data.frame(species=levels(plotfinal$species), pch=c(0,1,2,6,15,16,17))
plotfinal <- merge(plotfinal,pch)
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1)
plotfinal$rowid <- 1:nrow(plotfinal)
plotfinal
aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.mgmtvars
plot(plotfinal$pred~x, ylim=c(0,1), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x
xloc.divide
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.di
xloc.divide
plot(plotfinal$pred~x, ylim=c(0,1), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(0.5:51.5), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
c(0.5:51.5)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(0.5,51.5), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(0.8,51.2), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(1,51), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,51), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
xloc.divide <- xloc.divide[-length(xloc.divide)]
xloc.divide
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, cex=2, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, cex=1.5, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
pch <- data.frame(species=levels(plotfinal$species), pch=c(21,22,24,25,21,22,24), col=sample(grey(seq(from=0,to=1,length.out = 7)), 7))
plotfinal <- merge(plotfinal,pch)
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
plotfinal
pch <- data.frame(species=levels(plotfinal$species), pch=c(21,22,24,25,21,22,24), col=sample(grey(seq(from=0,to=1,length.out = 7)), 7))
pch
plotfinal <- merge(plotfinal,pch)
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal
plotfinal <- do.call(rbind, plotdat)
pch <- data.frame(species=levels(plotfinal$species), pch=c(21,22,24,25,21,22,24), col=sample(grey(seq(from=0,to=1,length.out = 7)), 7))
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, col=plotfinal$col, cex=1.5, xaxt="n", xlab="", ylab="", las=1)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, col="black", bg=plotfinal$col, cex=1.5, xaxt="n", xlab="", ylab="", las=1)
plot(1:7, bg=sample(grey(seq(from=0,to=1,length.out = 7)), 7))
?par
?points
plot(1:7)
plot(1:7,bty="n")
plot(1:7, type="n")
points(1:7,bg=sample(grey(seq(from=0,to=1,length.out = 7)), 7))
sample(grey(seq(from=0,to=1,length.out = 7)), 7)
plot(1:7, type="n")
points(1:7, bg=c("grey30","grey60","grey80","white","black","grey80","grey50"))
?points
points(1:7, bg=c("grey30","grey60","grey80","white","black","grey80","grey50"), pch=pch$pch)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, bg=plotfinal$col, cex=1.5, xaxt="n", xlab="", ylab="", las=1)
plot(1:7, type="n")
points(1:7, bg=sample(grey(seq(from=0,to=1,length.out = 7)), 7), pch=pch$pch)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), type="n", xaxt="n", xlab="", ylab="", las=1)
points(x, plotfinal$pred, pch=plotfinal$pch, bg=plotfinal$col, cex=1.5)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), type="n", xaxt="n", xlab="", ylab="", las=1)
points(x, plotfinal$pred, pch=plotfinal$pch, bg="black", cex=1.5)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), type="n", xaxt="n", xlab="", ylab="", las=1)
points(x, plotfinal$pred, pch=plotfinal$pch, bg=c("black","grey"), cex=1.5)
plotfinal$col
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), type="n", pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.5, xaxt="n", xlab="", ylab="", las=1)
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.5, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
text(x, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(2,50), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.5, xaxt="n", xlab="", ylab="", las=1)
axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","more water \n applied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
title(xlab="Management intervention evaluated", cex.lab=1.5, font=2, line=5)
title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
