geom_point(position=pd)+
geom_linerange(aes(ymin=pred-2*SE2,ymax=pred+2*SE2),
position=pd)
fm1$varFix
?lme.oject
?lme.object
?lme
i
plotmod <- mod[[i]] # model to plot results
origdat <- moddat[[i]] # original dataset
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species, study))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species, reference))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(fm1, level=0, newdat)
newdat$pred <- predict(plotmod, level=0, newdat)
pred
newdat
head(newdat)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(plotmod, level=0, newdat)
head(newdat)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species, reference))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(plotmod, level=0, newdat)
Designmat <- model.matrix(eval(eval(fm1$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% fm1$varFix %*% t(Designmat))
Designmat <- model.matrix(eval(eval(plotmod$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% plotmod$varFix %*% t(Designmat))
newdat$SE <- sqrt(predvar)
newdat$SE2 <- sqrt(predvar+fm1$sigma^2)
head(newdat)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(plotmod, level=0, newdat)
Designmat <- model.matrix(eval(eval(plotmod$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% plotmod$varFix %*% t(Designmat))
newdat$SE <- sqrt(predvar)
newdat$SE2 <- sqrt(predvar+fm1$sigma^2)
fits <- data.frame(pred=pred$fit, se.fit=pred$se.fit, lci=(pred$fit - (1.96*pred$se.fit)), uci=(pred$fit + (1.96*pred$se.fit)))
head(newda)
head(newdat)
x <- with(origdat, unique(stan.effect.size,mgmt))
x
origdat
head(origdat)
head(dat)
head(dat0)
x <- dat0[dat0$reference==1,]
x
x <- dat0[dat0$reference==1 & dat0$metric=="abundance",]
x
head(origdat)
head(x)
origdat2 <- origdat[order(origdat$reference, origdat$species)]
origdat2 <- origdat[order(origdat$reference, origdat$species),]
head(origdat2)
head(mdat)
at0 <- readRDS(paste(workspacewd, "meadow birds analysis dataset_full.rds", sep="/"))
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
# subset dataset for analysis to desired columns only
dat1 <- subset(dat0, select=c("reference","lit.type","score","country","study.length","habitat","species","overall.metric","metric","specific.metric","stan.metric","sample.size","analysis2","success","stan.calc","stan.metric.before","stan.metric.after","stan.effect.size","sig","effect.dir",mgmtvars))
# subset dataset to include records with effect sizes measured (whatever the significance of the effect)
dat2 <- subset(dat1, stan.effect.size!="" & stan.effect.size!="#DIV/0!")
dat2$stan.effect.size <- as.numeric(as.character(dat2$stan.effect.size))
dat2 <- droplevels(dat2)
hist(dat2$stan.effect.size)
###*** Long right-tail on the distribution, some very large positive effects
dat <- dat2
#------------  Recode management variables as factors for analysis and make 'none' the reference level -----------------
for (i in 1:length(mgmtvars)) {
dat[,mgmtvars[i]] <- as.factor(dat[,mgmtvars[i]])
dat[,mgmtvars[i]] <- relevel(dat[,mgmtvars[i]], ref="none")
print(levels(dat[,mgmtvars[i]]))
}
head(dat)
dat$new.stan.metric <- ifelse(grepl("chick survival", dat$stan.metric), "chick survival", ifelse(grepl("number of", dat$stan.metric), "abundance", as.character(dat$stan.metric)))
head(dat)
table(dat$new.stan.metric)
# metrics to test - other metrics have sample sizes which are too small
metrics <- c("abundance","multiplicative yearly slope","nest survival (Mayfield)")
###----  Nuisance variables, all metrics pooled ----###
nui.dat <- unique(dat[,c("reference","study.length","sample.size","analysis2","lit.type","stan.effect.size")])
# use unique dataset only to test effect sizes (replication because of multiples of same study, same effect sizes, but with different interventions used)
str(nui.dat)
str(dat)
# use unique dataset only to test effect sizes (replication because of multiple records of same study)
m.nui1 <- lme(stan.effect.size ~ study.length + sample.size + analysis2 + lit.type, random = ~1|reference, data=nui.dat)
summary(m.nui1)
nui.dat <- unique(dat[,c("reference","study.length","sample.size","analysis2","lit.type","stan.effect.size","new.stan.metric")])
m.nui2 <- list()
m.nui2.dat <- list()
for (i in 1:length(metrics)) {
print(metrics[i])
mdat <- subset(nui.dat, new.stan.metric==metrics[i])
mdat <- droplevels(mdat)
m.nui2.dat[[i]] <- mdat
print(nrow(mdat))
m.nui2[[i]] <- lme(stan.effect.size ~ study.length + sample.size + analysis2 + lit.type, random = ~ 1|reference, data=mdat)
}
names(m.nui2) <- metrics
lapply(m.nui2, summary)
mod <- list()
moddat <- list()
i<-2
i<-1
print(metrics[i])
mdat <- subset(dat, new.stan.metric==metrics[i])
str(mdat)
print(nrow(mdat))
print(table(mdat$mgmt))
print(table(mdat[,mgmtvars]))
mdat[,mgmtvars]
mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing + fertpest + nest.protect + predator.control + water + species, random = ~1|reference, data=mdat)
print(summary(mod[[i]]))
hist(mdat$stan.calc)
hist(mdat$stan.effect.size)
if (metrics[i]=="abundance") {
mdat <- subset(mdat, predator.control!="applied" & predator.control!="reduced" & fertpest!="reduced" & water!="reduced")
mdat <- subset(mdat, stan.effect.size < 16) # remove large outlier
}
if (metrics[i]=="multiplicative yearly slope") mdat <- subset(mdat, stan.effect.size > -0.4) # remove large outlier
if (metrics[i]=="nest survival (Mayfield)") mdat <- subset(mdat, species!="curlew" & species!="dunlin") # control for too few studies assessing curlew or dunlin
# removelevels <- c("predator.control applied", "predator.control reduced", "water reduced")
# if (length(removelevels>0)) mdat <- subset(mdat, !grepl(paste(removelevels,collapse="|"), mdat$mgmt)) else mdat <- mdat
mdat <- droplevels(mdat)
moddat[[i]] <- mdat
print(nrow(mdat))
mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing + fertpest + nest.protect + predator.control + water + species, random = ~1|reference, data=mdat)
print(summary(mod[[i]]))
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing + fertpest + nest.protect + water + species, random = ~1|reference, data=mdat) # no predator control in abundance model
summary(mdat)
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing +  nest.protect + water + species, random = ~1|reference, data=mdat) # no predator control, fertpest records that aren't none in abundance model
print(summary(mod[[i]]))
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing +  nest.protect + water + species - 1, random = ~1|reference, data=mdat) # no predator control, fertpest records that aren't none in abundance model
print(summary(mod[[i]]))
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing +  nest.protect + water + species, random = ~1|reference, data=mdat) # no predator control, fertpest records that aren't none in abundance model
print(summary(mod[[i]]))
hist(mdat$stan.effect.size)
summary(mdat$species)
x <- c(1:20)
y <- rep(5,20)
z <- data.frame(x,y)
z
i<-1
temp <- subset(z, x==i)
print(nrow(temp))
temp < -list()
for (f in 1:nrow(z)) {
temp[[i]] <- subset(z, x==f)
print(nrow(temp[[i]]))
}
temp
temp[[2]]
temp[[20]]
nrow(z)
temp[[1]]
temp[[2]]
temp < -list()
for (f in 1:nrow(z)) {
temp[[i]] <- subset(z, x==f)
# print(nrow(temp[[i]]))
}
tmep
temp
temp < -list()
for (f in 1:nrow(z)) {
temp[[f]] <- subset(z, x==f)
# print(nrow(temp[[i]]))
}
temp
.libPaths()
# Samantha Franks
# 4 Aug 2016
set.seed(2)
# =================================  SET LOGIC STATEMENTS  ====================
# default to plot when all are FALSE is results from overall analysis (0a)
species <- FALSE # plot the species-specific model results (0b)
metric <- FALSE # plot the metric-specific model results (0c)
habitat <- FALSE # plot the habitat-specific model results (0d)
alphalevel <- 0.05
successlevel <- 0.05
# =================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","car","blme")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
# =================================  LOAD FUNCTIONS =================================
### Ben Bolker's function for calculating CIs on predictions from a merMod object and plotting the results from his RPubs GLMM worked examples
# http://rpubs.com/bbolker/glmmchapter
# by specifying re.form=NA we're saying that we want the population-level prediction, i.e. setting the random effects to zero and getting a prediction for an average (or unknown) group
# Computing confidence intervals on the predicted values is relatively easy if we're willing to completely ignore the random effects, and the uncertainty of the random effects
# this easy method produces similar width CIs to using the bootMer function in lme4, perhaps slightly wider CIs in some cases
# can change to alpha=0.16, approximately equal to 84% CIs
easyPredCI <- function(model,newdata,alpha=alphalevel) {
## baseline prediction, on the linear predictor (logit) scale:
pred0 <- predict(model,re.form=NA,newdata=newdata)
## fixed-effects model matrix for new data
X <- model.matrix(formula(model,fixed.only=TRUE)[-2],
newdata)
beta <- fixef(model) ## fixed-effects coefficients
V <- vcov(model)     ## variance-covariance matrix of beta
pred.se <- sqrt(diag(X %*% V %*% t(X))) ## std errors of predictions
## inverse-link (logistic) function: could also use plogis()
linkinv <- model@resp$family$linkinv
## construct 95% Normal CIs on the link scale and
##  transform back to the response (probability) scale:
crit <- -qnorm(alpha/2)
linkinv(cbind(lwr=pred0-crit*pred.se,
upr=pred0+crit*pred.se))
}
# =================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output/submission", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
# ==============================  SET OUTPUT DIRECTORY  ===================================
setwd(outputwd)
# ================================    MANAGEMENT VARIABLE NAMES    ===============================
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
png("Fig3_specifc management_overall_species_metric.png", res=300, height=18, width=18, units="in", pointsize=22)
par(mfrow=c(3,1), oma=c(3,5,1,1))
# ==== Fig 3a - OVERALL ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0a.rds", sep="/")) #[c("AE","reserve.desig")]
mod <- readRDS(paste(workspacewd, "models_0a_lme4.rds", sep="/")) #[c("AE","reserve.desig")]
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
n <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
n[i] <- nrow(moddat[[i]])
fits <- data.frame(pred,pred.CI,lit.type=moddat[[i]][,"lit.type"],mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]))
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar), mean)
}
names(plotdat) <- mgmtvars #c("AE","reserve.desig")
fig3a <- do.call(rbind, plotdat[4:9])
### ---- Fig 3a: Specific management interventions plot ----
par(mar=c(5,3,3,2))
plotfinal <- fig3a
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), pch=16, cex=2, xaxt="n", xlab="", ylab="", las=1, bty="n", xlim=c(min(x)-0.5, max(x)+0.5))
# axis(1, x, labels=rep("",nrow(plotfinal)), tick=TRUE)
text(x, par("usr")[3]-0.03, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \napplied", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/\npesticides \napplied","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied", "water \nreduced"))
# text(x, par("usr")[3]-0.06, srt = 30, pos=1, xpd = TRUE, labels=c("AES","basic-level \n AES","higher-level \n AES","nature reserve/ \n designation", "mowing applied", "mowing reduced", "grazing applied", "grazing reduced", "fertiliser/pesticides \n applied","fertiliser/pesticides \n reduced","nest protection \n applied","predator control \n applied","water \n applied", "water \n reduced"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05)
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05)
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=successlevel, lty=3, lwd=2)
mtext("a)", side=3, adj=0, line=2)
mtext("Intervention", side=1, outer=TRUE, line=1.5, cex=1.2)
mtext("Predicted probability of success \n (significant positive impact)", side=2, outer=TRUE, cex=1.2, line=1.5)
# ==== Fig 3b - SPECIES ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0b.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0b_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, species=moddat[[i]]$species, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, species=unique.fits$species), mean)
}
names(plotdat) <- mgmtvars
fig3b <- do.call(rbind, plotdat[4:9])
### ---- Fig 3b: Specific management interventions plot - SPECIES ----
par(mar=c(5,3,3,2))
plotfinal <- fig3b
maxspecies <- levels(do.call(rbind, plotdat)$species)
n <- length(maxspecies)
set.seed(2)
pch <- data.frame(species=maxspecies, pch=rep(c(21,22,23,24,25),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), replace=TRUE, n))
pch
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
# text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
text(xloc.mgmtvars, par("usr")[3]-0.03, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \nreduced", "grazing \napplied", "grazing \nreduced","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.05, lty=3, lwd=2)
mtext("b)", side=3, adj=0, line=2.5)
legend("topleft", legend=pch$species, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.15))
# legend(, legend=pch$species, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE)
# dev.off()
# ==== Fig 3b - METRIC ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0c.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0c_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, metric=moddat[[i]]$new.metric, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, metric=unique.fits$metric), mean)
}
names(plotdat) <- mgmtvars
fig3c <- do.call(rbind, plotdat[4:9])
### ---- Fig 3c: Specific management interventions plot - METRIC ----
par(mar=c(5,3,3,2))
plotfinal <- fig3c
maxmetric <- levels(do.call(rbind, plotdat)$metric)
n <- length(maxmetric)
set.seed(2)
pch <- data.frame(metric=maxmetric, pch=rep(c(21,22,23),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), n))
pch
plotfinal <- merge(plotfinal,pch, by="metric")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$metric),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("mowing \napplied","mowing \nreduced", "grazing \napplied", "grazing \nreduced","fertiliser/\npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","water \napplied", "water \nreduced"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.05, lty=3, lwd=2)
mtext("c)", side=3, adj=0, line=2.5)
legend("topleft", legend=pch$metric, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.2))
dev.off()
png("Fig2_AES_site protection_species_metric.png", res=300, height=15, width=20, units="in", pointsize=20)
par(mfcol=c(2,2), oma=c(3,5,3,1))
# ==== Fig 2a and 2b - SPECIES ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0b.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0b_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, species=moddat[[i]]$species, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, species=unique.fits$species), mean)
}
names(plotdat) <- mgmtvars
fig2a <- do.call(rbind, plotdat[c("AE","reserve.desig")])
fig2b <- do.call(rbind, plotdat[c("AE.level")])
### ---- Fig 2a: Policy level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2a
maxspecies <- levels(do.call(rbind, plotdat)$species)
n <- length(maxspecies)
set.seed(2)
pch <- data.frame(species=maxspecies, pch=rep(c(21,22,23,24,25),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), replace=TRUE, n))
pch
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","site protection"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=successlevel, lty=3, lwd=2)
mtext("a)", side=3, adj=0, line=1)
legend("topleft", legend=levels(plotfinal$species), pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.05))
mtext("Intervention", side=1, outer=TRUE, line=1.5, cex=1.2)
mtext("Predicted probability of success \n (significant positive impact)", side=2, outer=TRUE, cex=1.2, line=1.5)
### ---- Fig 2b: AES level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2b
maxspecies <- levels(do.call(rbind, plotdat)$species)
n <- length(maxspecies)
set.seed(2)
pch <- data.frame(species=maxspecies, pch=rep(c(21,22,23,24,25),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), replace=TRUE, n))
pch
plotfinal <- merge(plotfinal,pch, by="species")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$species),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid),max(plotfinal$rowid)), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
# text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("basic AES","higher AES"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
abline(h=0.05, lty=3, lwd=2)
mtext("b)", side=3, adj=0, line=1)
# ==== Fig 2c and 2d - METRIC ====
# -------    Load data and model   -----------
moddat <- readRDS(paste(workspacewd, "model dataset_0c.rds", sep="/"))
mod <- readRDS(paste(workspacewd, "models_0c_blme.rds", sep="/"))
# -------   Produce plotting dataset predictions   ---------
plotdat <- list()
for (i in 1:length(mod)) {
# dataset to predict over is the same as the original dataset
pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
fits <- data.frame(pred, pred.CI, metric=moddat[[i]]$new.metric, mgmtvar=paste(mgmtvars[i], moddat[[i]][,mgmtvars[i]]), mgmt.type=i)
unique.fits <- unique(fits)
plotdat[[i]] <- aggregate(unique.fits[,c("pred","lwr","upr")], by=list(mgmtvar=unique.fits$mgmtvar, mgmt.type=unique.fits$mgmt.type, metric=unique.fits$metric), mean)
}
names(plotdat) <- mgmtvars
fig2c <- do.call(rbind, plotdat[c("AE","reserve.desig")])
fig2d <- do.call(rbind, plotdat[c("AE.level")])
### ---- Fig 2c: Policy level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2c
maxmetric <- levels(do.call(rbind, plotdat)$metric)
n <- length(maxmetric)
set.seed(2)
pch <- data.frame(metric=maxmetric, pch=rep(c(21,22,23),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), n))
pch
plotfinal <- merge(plotfinal,pch, by="metric")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$metric),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(1:nrow(plotfinal))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid)-0.5,max(plotfinal$rowid)+0.2), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","site protection"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=successlevel, lty=3, lwd=2)
legend("topleft", legend=pch$metric, pch=pch$pch, pt.bg=as.character(pch$col), pt.cex=1.2, bty="n", xpd=TRUE, inset=c(0.01,-0.05))
mtext("c)", side=3, adj=0, line=1)
### ---- Fig 2d: AES level interventions plot ----
par(mar=c(3,3,2,2))
plotfinal <- fig2d
maxmetric <- levels(do.call(rbind, plotdat)$metric)
n <- length(maxmetric)
set.seed(2)
pch <- data.frame(metric=maxmetric, pch=rep(c(21,22,23),length.out=n), col=sample(grey(seq(from=0,to=1,length.out = n)), n))
pch
plotfinal <- merge(plotfinal,pch, by="metric")
plotfinal <- plotfinal[order(plotfinal$mgmtvar,plotfinal$metric),]
plotfinal$rowid <- 1:nrow(plotfinal)
xloc.mgmtvars <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), mean)$x
xloc.divide <- aggregate(plotfinal$rowid, list(plotfinal$mgmtvar), max)$x + 0.5
xloc.divide <- xloc.divide[-length(xloc.divide)]
x <- c(min(plotfinal$rowid):max(plotfinal$rowid))
plot(plotfinal$pred~x, ylim=c(0,1), xlim=c(min(plotfinal$rowid)-0.5,max(plotfinal$rowid)+0.2), pch=plotfinal$pch, bg=as.character(plotfinal$col), cex=1.8, xaxt="n", xlab="", ylab="", las=1, bty="n")
# axis(1, xloc.mgmtvars, labels=rep("",length(xloc.mgmtvars)), tick=TRUE)
abline(v=xloc.divide, lty=3, lwd=1.5)
# text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("AES","basic-level \nAES","higher-level \nAES","nature reserve/ \ndesignation", "mowing \nreduced", "grazing \napplied", "grazing \nreduced", "fertiliser/ \npesticides \nreduced","nest \nprotection \napplied","predator \ncontrol \napplied","more water \napplied"))
text(xloc.mgmtvars, par("usr")[3]-0.05, srt = 0, pos=1, xpd = TRUE, labels=c("basic AES","higher AES"))
arrows(x, plotfinal$pred, x, plotfinal$lwr, angle=90, length=0.05, col="grey30")
arrows(x, plotfinal$pred, x, plotfinal$upr, angle=90, length=0.05, col="grey30")
# title(xlab="Intervention", cex.lab=1.5, font=2, line=5)
# title(ylab="Predicted probability of success \n (significant positive impact)", cex.lab=1.5, font=2, line=3)
abline(h=0.05, lty=3, lwd=2)
mtext("d)", side=3, adj=0, line=1)
dev.off()
