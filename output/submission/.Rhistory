pred <- predict(mod[[i]], type="response", re.form=NA)
pred.CI <- easyPredCI(mod[[i]], moddat[[i]])
mod.lmer <- list()
mod <- list()
mod.lmer <- list()
moddat <- list()
i<-1
print(metrics[i])
mdat <- subset(dat, new.stan.metric==metrics[i])
#   # check for sample sizes of different management treatment groups, remove small ones
#   checksample <- table(mdat$mgmt)
#   removelevels <- names(checksample)[checksample < 5]
# DFs for predator control (applied and reduced), water reduced are very small because they are each only tested in a single study so the model can't estimate the effect of those interventions, separately from the effect of the random effect study (checked this with Ali)
# not gaining anything useful from this so remove these interventions
if (metrics[i]=="abundance") {
mdat <- subset(mdat, mgmt!="predator.control applied" & mgmt!="predator.control reduced" & mgmt!="water reduced")
mdat <- subset(mdat, stan.effect.size < 16) # remove large outlier
}
if (metrics[i]=="multiplicative yearly slope") mdat <- subset(mdat, stan.effect.size > -0.4) # remove large outlier
if (metrics[i]=="nest survival (Mayfield)") mdat <- subset(mdat, species!="curlew" & species!="dunlin") # control for too few studies assessing curlew or dunlin
# removelevels <- c("predator.control applied", "predator.control reduced", "water reduced")
# if (length(removelevels>0)) mdat <- subset(mdat, !grepl(paste(removelevels,collapse="|"), mdat$mgmt)) else mdat <- mdat
mdat <- droplevels(mdat)
mdat$mgmt <- as.factor(mdat$mgmt)
moddat[[i]] <- mdat
print(nrow(mdat))
print(table(mdat$mgmt))
print(table(mdat$mgmt,mdat$reference))
mod[[i]] <- lme(stan.effect.size ~ mgmt + species, random = ~1|reference, data=mdat)
mod.lmer[[i]] <- lmer(stan.effect.size ~ mgmt + species + 1|reference, data=mdat)
print(summary(mod[[i]]))
mod.lmer[[i]] <- lmer(stan.effect.size ~ mgmt + species + 1|reference, data=mdat)
mod.lmer[[i]] <- lmer(stan.effect.size ~ mgmt + 1|reference, data=mdat)
mod.lmer[[i]] <- lmer(stan.effect.size ~ mgmt + 1|reference, data=mdat,control=glmerControl(optimizer="bobyqa"))
mod.lmer[[i]] <- lmer(stan.effect.size ~ mgmt + 1|reference, data=mdat,control=lmerControl(optimizer="bobyqa"))
summary(mod.lmer[[i]])
?predict.lme
names(mod[[1]])
?plogis
i<-1
pred <- predict(mod[[i]], level=0, se.fit=TRUE)
confint(mod[[i]])
?confint.lme
?intervals.lme
fm1 <- lme(distance ~ age, Orthodont, random = ~ age | Subject)
intervals(fm1)
pred <- predict(mod[[i]], type="response", re.form=N)
pred <- predict(mod[[i]], level=0, se.fit=TRUE)
fits <- data.frame(pred=pred$fit, se.fit=pred$se.fit, lci=(pred$fit - (1.96*pred$se.fit)), uci=(pred$fit + (1.96*pred$se.fit)))
pred <- predict(mod[[i]], level=0, se.fit=TRUE)
fits <- data.frame(pred=pred$fit, se.fit=pred$se.fit, lci=(pred$fit - (1.96*pred$se.fit)), uci=(pred$fit + (1.96*pred$se.fit)))
pred
mod[[1]]
?predict.lm
pred <- predict(mod[[i]], level=0, se.fit=TRUE)
ptrf
pred
?predict.lme
names(mod[[i]])
model <- mod[[i]]
newdata <- moddat[[i]]
pred0 <- predict(model,re.form=NA,newdata=newdata)
pred0 <- predict(model,re.form=NA,newdata=newdata)
pred <- predict(model, level=0)
pred0
pred
pred <- predict(model, level=0, newdata=newdata)
pred0
pred
pred0 <- predict(model,newdata=newdata)
pred <- predict(model, level=0, newdata=newdata)
pred
pred0
pred <- predict(mod[[i]])
pred
mod[[i]]
?predict.lme
fm1 <- lme(distance ~ age, Orthodont, random = ~ age | Subject)
newOrth <- data.frame(Sex = c("Male","Male","Female","Female","Male","Male"),
age = c(15, 20, 10, 12, 2, 4),
Subject = c("M01","M01","F30","F30","M04","M04"))
predict(fm1, newOrth, level = 0:1)
pred <- predict(mod[[i]], level=0:1)
pred
pred <- predict(mod[[i]], level=0:1, se.fit=TRUE)
pred
fm1 <- lme(distance ~ age*Sex, random = ~ 1 + age | Subject,
data = Orthodont)
plot(Orthodont)
newdat <- expand.grid(age=c(8,10,12,14), Sex=c("Male","Female"))
newdat$pred <- predict(fm1, newdat, level = 0)
Designmat <- model.matrix(eval(eval(fm1$call$fixed)[-2]), newdat[-3])
head(newdat)
head(Designmat)
newdat <- with(moddat[[i]], data.frame(stan.effect.size, mgmt, species))
pred <- predict(mod[[i]], level=0, newdat)
head(pred)
head(newdat)
newdat$pred <- predict(mod[[i]], level=0, newdat)
fm1 <- mod[[i]]
newdat$pred <- predict(fm1, level=0, newdat)
Designmat <- model.matrix(eval(eval(fm1$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% fm1$varFix %*% t(Designmat))
newdat$SE <- sqrt(predvar)
newdat$SE2 <- sqrt(predvar+fm1$sigma^2)
head(Designmat)
tail(Designmat)
Designmat
eval(eval(fm1$call$fixed)
)
fm1 <- lme(distance ~ age*Sex, random = ~ 1 + age | Subject,
data = Orthodont)
plot(Orthodont)
newdat <- expand.grid(age=c(8,10,12,14), Sex=c("Male","Female"))
newdat$pred <- predict(fm1, newdat, level = 0)
Designmat <- model.matrix(eval(eval(fm1$call$fixed)[-2]), newdat[-3])
eval(eval(fm1$call$fixed)
)
eval(eval(fm1$call$fixed)[-2])
Designmat <- model.matrix(eval(eval(fm1$call$fixed)[-2]), newdat[-3])
Designmat
?model.matrix
predvar <- diag(Designmat %*% fm1$varFix %*% t(Designmat))
predvar
t(Designmat)
newdat$SE <- sqrt(predvar)
Designmat %*% fm1$varFix %*% t(Designmat)
newdat$SE <- sqrt(predvar)
newdat$SE2 <- sqrt(predvar+fm1$sigma^2)
head(newdat)
library(ggplot2)
pd <- position_dodge(width=0.4)
ggplot(newdat,aes(x=age,y=pred,colour=Sex))+
geom_point(position=pd)+
geom_linerange(aes(ymin=pred-2*SE,ymax=pred+2*SE),
position=pd)
## prediction intervals
ggplot(newdat,aes(x=age,y=pred,colour=Sex))+
geom_point(position=pd)+
geom_linerange(aes(ymin=pred-2*SE2,ymax=pred+2*SE2),
position=pd)
fm1$varFix
?lme.oject
?lme.object
?lme
i
plotmod <- mod[[i]] # model to plot results
origdat <- moddat[[i]] # original dataset
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species, study))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species, reference))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(fm1, level=0, newdat)
newdat$pred <- predict(plotmod, level=0, newdat)
pred
newdat
head(newdat)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(plotmod, level=0, newdat)
head(newdat)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species, reference))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(plotmod, level=0, newdat)
Designmat <- model.matrix(eval(eval(fm1$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% fm1$varFix %*% t(Designmat))
Designmat <- model.matrix(eval(eval(plotmod$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% plotmod$varFix %*% t(Designmat))
newdat$SE <- sqrt(predvar)
newdat$SE2 <- sqrt(predvar+fm1$sigma^2)
head(newdat)
newdat <- with(origdat, data.frame(stan.effect.size, mgmt, species))
# pred <- predict(mod[[i]], type="response", re.form=N)
newdat$pred <- predict(plotmod, level=0, newdat)
Designmat <- model.matrix(eval(eval(plotmod$call$fixed)[-2]), newdat[-which(names(newdat) %in% "pred")])
predvar <- diag(Designmat %*% plotmod$varFix %*% t(Designmat))
newdat$SE <- sqrt(predvar)
newdat$SE2 <- sqrt(predvar+fm1$sigma^2)
fits <- data.frame(pred=pred$fit, se.fit=pred$se.fit, lci=(pred$fit - (1.96*pred$se.fit)), uci=(pred$fit + (1.96*pred$se.fit)))
head(newda)
head(newdat)
x <- with(origdat, unique(stan.effect.size,mgmt))
x
origdat
head(origdat)
head(dat)
head(dat0)
x <- dat0[dat0$reference==1,]
x
x <- dat0[dat0$reference==1 & dat0$metric=="abundance",]
x
head(origdat)
head(x)
origdat2 <- origdat[order(origdat$reference, origdat$species)]
origdat2 <- origdat[order(origdat$reference, origdat$species),]
head(origdat2)
head(mdat)
at0 <- readRDS(paste(workspacewd, "meadow birds analysis dataset_full.rds", sep="/"))
mgmtvars <- c("AE","AE.level","reserve.desig","mowing","grazing","fertpest","nest.protect","predator.control","water")
# subset dataset for analysis to desired columns only
dat1 <- subset(dat0, select=c("reference","lit.type","score","country","study.length","habitat","species","overall.metric","metric","specific.metric","stan.metric","sample.size","analysis2","success","stan.calc","stan.metric.before","stan.metric.after","stan.effect.size","sig","effect.dir",mgmtvars))
# subset dataset to include records with effect sizes measured (whatever the significance of the effect)
dat2 <- subset(dat1, stan.effect.size!="" & stan.effect.size!="#DIV/0!")
dat2$stan.effect.size <- as.numeric(as.character(dat2$stan.effect.size))
dat2 <- droplevels(dat2)
hist(dat2$stan.effect.size)
###*** Long right-tail on the distribution, some very large positive effects
dat <- dat2
#------------  Recode management variables as factors for analysis and make 'none' the reference level -----------------
for (i in 1:length(mgmtvars)) {
dat[,mgmtvars[i]] <- as.factor(dat[,mgmtvars[i]])
dat[,mgmtvars[i]] <- relevel(dat[,mgmtvars[i]], ref="none")
print(levels(dat[,mgmtvars[i]]))
}
head(dat)
dat$new.stan.metric <- ifelse(grepl("chick survival", dat$stan.metric), "chick survival", ifelse(grepl("number of", dat$stan.metric), "abundance", as.character(dat$stan.metric)))
head(dat)
table(dat$new.stan.metric)
# metrics to test - other metrics have sample sizes which are too small
metrics <- c("abundance","multiplicative yearly slope","nest survival (Mayfield)")
###----  Nuisance variables, all metrics pooled ----###
nui.dat <- unique(dat[,c("reference","study.length","sample.size","analysis2","lit.type","stan.effect.size")])
# use unique dataset only to test effect sizes (replication because of multiples of same study, same effect sizes, but with different interventions used)
str(nui.dat)
str(dat)
# use unique dataset only to test effect sizes (replication because of multiple records of same study)
m.nui1 <- lme(stan.effect.size ~ study.length + sample.size + analysis2 + lit.type, random = ~1|reference, data=nui.dat)
summary(m.nui1)
nui.dat <- unique(dat[,c("reference","study.length","sample.size","analysis2","lit.type","stan.effect.size","new.stan.metric")])
m.nui2 <- list()
m.nui2.dat <- list()
for (i in 1:length(metrics)) {
print(metrics[i])
mdat <- subset(nui.dat, new.stan.metric==metrics[i])
mdat <- droplevels(mdat)
m.nui2.dat[[i]] <- mdat
print(nrow(mdat))
m.nui2[[i]] <- lme(stan.effect.size ~ study.length + sample.size + analysis2 + lit.type, random = ~ 1|reference, data=mdat)
}
names(m.nui2) <- metrics
lapply(m.nui2, summary)
mod <- list()
moddat <- list()
i<-2
i<-1
print(metrics[i])
mdat <- subset(dat, new.stan.metric==metrics[i])
str(mdat)
print(nrow(mdat))
print(table(mdat$mgmt))
print(table(mdat[,mgmtvars]))
mdat[,mgmtvars]
mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing + fertpest + nest.protect + predator.control + water + species, random = ~1|reference, data=mdat)
print(summary(mod[[i]]))
hist(mdat$stan.calc)
hist(mdat$stan.effect.size)
if (metrics[i]=="abundance") {
mdat <- subset(mdat, predator.control!="applied" & predator.control!="reduced" & fertpest!="reduced" & water!="reduced")
mdat <- subset(mdat, stan.effect.size < 16) # remove large outlier
}
if (metrics[i]=="multiplicative yearly slope") mdat <- subset(mdat, stan.effect.size > -0.4) # remove large outlier
if (metrics[i]=="nest survival (Mayfield)") mdat <- subset(mdat, species!="curlew" & species!="dunlin") # control for too few studies assessing curlew or dunlin
# removelevels <- c("predator.control applied", "predator.control reduced", "water reduced")
# if (length(removelevels>0)) mdat <- subset(mdat, !grepl(paste(removelevels,collapse="|"), mdat$mgmt)) else mdat <- mdat
mdat <- droplevels(mdat)
moddat[[i]] <- mdat
print(nrow(mdat))
mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing + fertpest + nest.protect + predator.control + water + species, random = ~1|reference, data=mdat)
print(summary(mod[[i]]))
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing + fertpest + nest.protect + water + species, random = ~1|reference, data=mdat) # no predator control in abundance model
summary(mdat)
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing +  nest.protect + water + species, random = ~1|reference, data=mdat) # no predator control, fertpest records that aren't none in abundance model
print(summary(mod[[i]]))
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing +  nest.protect + water + species - 1, random = ~1|reference, data=mdat) # no predator control, fertpest records that aren't none in abundance model
print(summary(mod[[i]]))
if (metrics[i]=="abundance") mod[[i]] <- lme(stan.effect.size ~ AE.level + reserve.desig + mowing + grazing +  nest.protect + water + species, random = ~1|reference, data=mdat) # no predator control, fertpest records that aren't none in abundance model
print(summary(mod[[i]]))
hist(mdat$stan.effect.size)
summary(mdat$species)
x <- c(1:20)
y <- rep(5,20)
z <- data.frame(x,y)
z
i<-1
temp <- subset(z, x==i)
print(nrow(temp))
temp < -list()
for (f in 1:nrow(z)) {
temp[[i]] <- subset(z, x==f)
print(nrow(temp[[i]]))
}
temp
temp[[2]]
temp[[20]]
nrow(z)
temp[[1]]
temp[[2]]
temp < -list()
for (f in 1:nrow(z)) {
temp[[i]] <- subset(z, x==f)
# print(nrow(temp[[i]]))
}
tmep
temp
temp < -list()
for (f in 1:nrow(z)) {
temp[[f]] <- subset(z, x==f)
# print(nrow(temp[[i]]))
}
temp
.libPaths()
#=================================  LOAD PACKAGES =================================
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only=TRUE)
#=================================  SET DIRECTORY STRUCTURE  ================================
# LOCAL
if(.Platform$OS =='windows') {
cluster <- FALSE
Mac <- FALSE
}
# HPCBTO
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samf') {
cluster <- TRUE
Mac <- FALSE
Wales <- FALSE
}
# Mac
if(.Platform$OS=='unix' & Sys.getenv('USER')=='samantha') {
cluster <- FALSE
Mac <- TRUE
Wales <- FALSE
}
#### SET DIRECTORY PATHS
# # Wales HPC cluster
# if (cluster) parentwd <- c("/home/samantha.franks/")
if (cluster) parentwd <- c("/users1/samf") # BTO cluster
if (!cluster) {
if (!Mac) parentwd <- c("C:/Users/samf/Documents/Git/eu_meadow_birds")
if (Mac) parentwd <- c("/Volumes/SAM250GB/BTO PC Documents/Git/eu_meadow_birds")
}
scriptswd <- paste(parentwd, "scripts", sep="/")
datawd <- paste(parentwd, "data", sep="/")
outputwd <- paste(parentwd, "output/submission", sep="/")
workspacewd <- paste(parentwd, "workspaces", sep="/")
options(digits=6)
#=================================  LOAD DATA  ===============================
source(paste(scriptswd, "2_meta-analysis_data preparation.R", sep="/"))
#=================================  SUMMARY STATISTICS  ===============================
# total number of studies in dataset
num.studies <- length(unique(dat$reference))
#---------- Proportion of studies by literature type (grey or primary) ----------
# summarize proportions of studies of different lit types
# create based on a unique dataset of reference id and lit.type
litsum <- table(unique(dat[,c("reference","lit.type")])$lit.type)
litsum.prop <- litsum/num.studies
png(paste(outputwd, "summary_proportion of studies by lit type.png", sep="/"), res=300, height=12, width=12, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(litsum.prop, space=0.1, las=1, col="grey90", ylim=c(0,1), xaxt="n")
text(x, par("usr")[3]-0.04, srt = 0, adj=1, xpd = TRUE, labels = c(names(litsum.prop)))
title(xlab="Literature type", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, litsum.prop+0.02, litsum) # sample sizes for each lit type
dev.off()
#---------- Proportion of studies by country ----------
# summarize proportions of studies from different countries
# create based on a unique dataset of reference id and country
countrysum <- table(unique(dat[,c("reference","country")])$country)
countrysum.prop <- countrysum/num.studies
png(paste(outputwd, "summary_proportion of studies by country.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(countrysum.prop, space=0.1, las=1, col="grey90", ylim=c(0,0.6), xaxt="n")
text(x, par("usr")[3]-0.02, srt = 30, adj=1, xpd = TRUE, labels = c(names(countrysum.prop)[-which(names(countrysum.prop) %in% "United Kingdom")], "United \n Kingdom"))
title(xlab="Country", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, countrysum.prop+0.02, countrysum) # sample sizes for each country
dev.off()
#---------- Proportion of studies by species ----------
speciessum <- table(unique(dat[,c("reference","species")])$species)
speciessum.prop <- speciessum/num.studies
png(paste(outputwd, "summary_proportion of studies by species.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(speciessum.prop, space=0.1, las=1, col="grey90", ylim=c(0,1), xaxt="n")
text(x, par("usr")[3]-0.03, srt = 30, adj=1, xpd = TRUE, labels = c( "black-tailed \n godwit",names(speciessum.prop)[-which(names(speciessum.prop) %in% "black-tailed godwit")]))
title(xlab="Species", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, speciessum.prop+0.02, speciessum) # sample sizes for each species
dev.off()
#---------- Proportion of studies by habitat ----------
d1.hab <- dat
d1.hab$newhabitat <- factor(d1.hab$newhabitat, c("arable","pastoral","unenclosed"), ordered=TRUE)
habsum <- table(unique(d1.hab[,c("reference","newhabitat")])$newhabitat)
habsum.prop <- habsum/num.studies
png(paste(outputwd, "summary_proportion of studies by habitat.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(habsum.prop, space=0.1, las=1, col="grey90", ylim=c(0,1), xaxt="n")
text(x, par("usr")[3]-0.04, srt = 0, xpd = TRUE, labels = c("arable","pastoral","unenclosed"))
title(xlab="Habitat", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, habsum.prop+0.02, habsum) # sample sizes for each habitat
dev.off()
#---------- Proportion of studies by overall metric ----------
# create an ordered factor of metrics for this summary (particularly for productivity so it's nest, chick, nest+chick)
# don't want to change this factor to ordered for the analysis though, because it will be treated differently than a regular factor in the model
d1.metric <- dat
d1.metric$new.metric <- factor(d1.metric$new.metric, c("abundance/occupancy","abundance/occupancy change","productivity","recruitment","survival"), ordered=TRUE)
metricsum <- table(unique(d1.metric[,c("reference","new.metric")])$new.metric)
metricsum.prop <- metricsum/num.studies
png(paste(outputwd, "summary_proportion of studies by metric.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(metricsum.prop, space=0.1, las=1, col="grey90", ylim=c(0,0.8), xaxt="n")
text(x, par("usr")[3]-0.04, srt = 30, adj=1, xpd = TRUE, labels = c("abundance/\noccupancy","abundance/\noccupancy change","productivity","recruitment","survival"))
title(xlab="Study metric", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, metricsum.prop+0.02, metricsum) # sample sizes for each metric
dev.off()
#---------- Proportion of studies by specific metric (for productivity)----------
# create an ordered factor of metrics for this summary (particularly for productivity so it's nest, chick, nest+chick)
d1.metric <- dat
# pool abundance/occupancy and change metrics
# show different productivity metrics separately
d1.metric$prod.metric <- with(d1.metric, ifelse(d1.metric$overall.metric=="abundance" | d1.metric$overall.metric=="occupancy", "abundance/occupancy", ifelse(d1.metric$overall.metric=="abundance change" | d1.metric$overall.metric=="occupancy change", "abundance/occupancy change", as.character(overall.metric))))
# create ordered factor
d1.metric$prod.metric <- factor(d1.metric$prod.metric, c("abundance/occupancy","abundance/occupancy change","productivity (nest level)", "productivity (chick level)", "productivity (nest + chick)","recruitment","survival"), ordered=TRUE)
metricsum <- table(unique(d1.metric[,c("reference","prod.metric")])$prod.metric)
metricsumprod.prop <- metricsum/num.studies
png(paste(outputwd, "summary_proportion of studies by productivity metric.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(metricsumprod.prop, space=0.1, las=1, col="grey90", ylim=c(0,0.8), xaxt="n")
text(x, par("usr")[3]-0.01, srt = 0, pos=1, xpd = TRUE, labels = c("abundance/\noccupancy","abundance/\noccupancy \nchange","productivity \n(nest)", "productivity \n(chick)", "productivity \n(nest+chick)","recruitment","survival"))
title(xlab="Study metric", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, metricsumprod.prop+0.02, metricsum) # sample sizes for each metric
dev.off()
#---------- Proportion of studies examining the effect of an intervention type ----------
### determine how many studies evaluated the effect of the intervention (repeat for each intervention)
# create blank objects
intervensum <- numeric()
intervensum.prop <- numeric()
intervensum.level <- list()
intervensum.level.prop <- list()
# mgmtvars to evluate, minus AE.level
eval.mgmtvars <- mgmtvars[-which(mgmtvars %in% "AE.level")]
for (i in 1:length(mgmtvars)) {
# number of unique cases (i.e. unique studies) where mgmtvar level != 'none'
x <- unique(dat[,c("reference",mgmtvars[i])]) # unique references and levels of the intervention
y <- x[x[mgmtvars[i]] != "none",] # remove the cases where intervention not evaluated
intervensum[i] <- length(unique(y$reference)) # the number of studies that evaluated the intervention
intervensum.prop[i] <- intervensum[i]/num.studies
intervensum.level[[i]] <- table(y[,mgmtvars[i]])
intervensum.level.prop[[i]] <- intervensum.level[[i]]/num.studies
}
names(intervensum) <- mgmtvars
names(intervensum.prop) <- mgmtvars
names(intervensum.level) <- mgmtvars
names(intervensum.level.prop) <- mgmtvars
# remove AE level from being plotted
intervensum.prop <- intervensum.prop[-which(names(intervensum.prop) %in% "AE.level")]
intervensum <- intervensum[-which(names(intervensum) %in% "AE.level")]
png(paste(outputwd, "summary_proportion of studies by intervention.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(intervensum.prop, space=0.1, las=1, col="grey90", ylim=c(0,0.6), xaxt="n")
text(x, par("usr")[3]-0.02, srt = 30, adj=1, xpd = TRUE, labels = c("AES","nature reserve", "mowing","grazing","fertiliser/ \n pesticides","nest \n protection","predator \n control","water \n management"))
title(xlab="Intervention", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, intervensum.prop+0.02, intervensum) # sample sizes for each intervention type
dev.off()
#---------- Summary statistics text output  ----------
setwd(outputwd)
sink(paste("summary statistics output.txt", sep=" "))
cat("\n\n####### Literature summary #######\n")
print(litsum.prop)
cat("\n\n####### Country summary #######\n")
print(countrysum.prop)
cat("\n\n####### Intervention summary #######\n")
print(intervensum.prop)
cat("\n\n####### Species summary #######\n")
print(speciessum.prop)
cat("\n\n####### Metric summary #######\n")
print(metricsum.prop)
cat("\n\n####### Metric summary (specific productivity metrics) #######\n")
print(metricsumprod.prop)
cat("\n\n####### Habitat summary #######\n")
print(habsum.prop)
sink()
getwd()
outputwd <- paste(parentwd, "output/submission", sep="/")
outputwd
setwd(outputwd)
getwd()
speciessum <- table(unique(dat[,c("reference","species")])$species)
speciessum.prop <- speciessum/num.studies
png(paste(outputwd, "summary_proportion of studies by species.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(speciessum.prop, space=0.1, las=1, col="grey90", ylim=c(0,1), xaxt="n")
text(x, par("usr")[3]-0.03, srt = 0, adj=1, xpd = TRUE, labels = c( "black-tailed \n godwit",names(speciessum.prop)[-which(names(speciessum.prop) %in% "black-tailed godwit")]))
title(xlab="Species", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, speciessum.prop+0.02, speciessum) # sample sizes for each species
dev.off()
png(paste(outputwd, "summary_proportion of studies by species.png", sep="/"), res=300, height=12, width=15, units="in", pointsize=20)
par(mar=c(6,5,2,1))
x <- barplot(speciessum.prop, space=0.1, las=1, col="grey90", ylim=c(0,1), xaxt="n")
text(x, par("usr")[3]-0.03, srt = 0, pos=1, xpd = TRUE, labels = c( "black-tailed \n godwit",names(speciessum.prop)[-which(names(speciessum.prop) %in% "black-tailed godwit")]))
title(xlab="Species", font=2, cex.lab=1.2, line=4.5)
title(ylab=paste("Proportion of total studies (n=", num.studies, ")", sep=""), font=2, cex.lab=1.2, line=3)
text(x, speciessum.prop+0.02, speciessum) # sample sizes for each species
dev.off()
list.of.packages <- c("MASS","reshape","raster","sp","rgeos","rgdal","lme4","tidyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
new.packages
